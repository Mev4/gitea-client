/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Issue represents an issue in a repository
 */
@Schema(description = "Issue represents an issue in a repository")
public class Issue {
  @SerializedName("assets")
  private List<Attachment> assets;

  @SerializedName("assignee")
  private User assignee;

  @SerializedName("assignees")
  private List<User> assignees;

  @SerializedName("body")
  private String body;

  @SerializedName("closed_at")
  private OffsetDateTime closedAt;

  @SerializedName("comments")
  private Long comments;

  @SerializedName("created_at")
  private OffsetDateTime createdAt;

  @SerializedName("due_date")
  private OffsetDateTime dueDate;

  @SerializedName("html_url")
  private String htmlUrl;

  @SerializedName("id")
  private Long id;

  @SerializedName("is_locked")
  private Boolean isLocked;

  @SerializedName("labels")
  private List<Label> labels;

  @SerializedName("milestone")
  private Milestone milestone;

  @SerializedName("number")
  private Long number;

  @SerializedName("original_author")
  private String originalAuthor;

  @SerializedName("original_author_id")
  private Long originalAuthorId;

  @SerializedName("pin_order")
  private Long pinOrder;

  @SerializedName("pull_request")
  private PullRequestMeta pullRequest;

  @SerializedName("ref")
  private String ref;

  @SerializedName("repository")
  private RepositoryMeta repository;

  @SerializedName("state")
  private String state;

  @SerializedName("title")
  private String title;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt;

  @SerializedName("url")
  private String url;

  @SerializedName("user")
  private User user;

  public Issue assets(List<Attachment> assets) {
    this.assets = assets;
    return this;
  }

  public Issue addAssetsItem(Attachment assetsItem) {
    if (this.assets == null) {
      this.assets = new ArrayList<Attachment>();
    }
    this.assets.add(assetsItem);
    return this;
  }

  /**
   * Get assets
   *
   * @return assets
   **/
  @Schema(description = "")
  public List<Attachment> getAssets() {
    return assets;
  }

  public void setAssets(List<Attachment> assets) {
    this.assets = assets;
  }

  public Issue assignee(User assignee) {
    this.assignee = assignee;
    return this;
  }

  /**
   * Get assignee
   *
   * @return assignee
   **/
  @Schema(description = "")
  public User getAssignee() {
    return assignee;
  }

  public void setAssignee(User assignee) {
    this.assignee = assignee;
  }

  public Issue assignees(List<User> assignees) {
    this.assignees = assignees;
    return this;
  }

  public Issue addAssigneesItem(User assigneesItem) {
    if (this.assignees == null) {
      this.assignees = new ArrayList<User>();
    }
    this.assignees.add(assigneesItem);
    return this;
  }

  /**
   * Get assignees
   *
   * @return assignees
   **/
  @Schema(description = "")
  public List<User> getAssignees() {
    return assignees;
  }

  public void setAssignees(List<User> assignees) {
    this.assignees = assignees;
  }

  public Issue body(String body) {
    this.body = body;
    return this;
  }

  /**
   * Get body
   *
   * @return body
   **/
  @Schema(description = "")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public Issue closedAt(OffsetDateTime closedAt) {
    this.closedAt = closedAt;
    return this;
  }

  /**
   * Get closedAt
   *
   * @return closedAt
   **/
  @Schema(description = "")
  public OffsetDateTime getClosedAt() {
    return closedAt;
  }

  public void setClosedAt(OffsetDateTime closedAt) {
    this.closedAt = closedAt;
  }

  public Issue comments(Long comments) {
    this.comments = comments;
    return this;
  }

  /**
   * Get comments
   *
   * @return comments
   **/
  @Schema(description = "")
  public Long getComments() {
    return comments;
  }

  public void setComments(Long comments) {
    this.comments = comments;
  }

  public Issue createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   *
   * @return createdAt
   **/
  @Schema(description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Issue dueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
    return this;
  }

  /**
   * Get dueDate
   *
   * @return dueDate
   **/
  @Schema(description = "")
  public OffsetDateTime getDueDate() {
    return dueDate;
  }

  public void setDueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
  }

  public Issue htmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
    return this;
  }

  /**
   * Get htmlUrl
   *
   * @return htmlUrl
   **/
  @Schema(description = "")
  public String getHtmlUrl() {
    return htmlUrl;
  }

  public void setHtmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
  }

  public Issue id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id
   **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Issue isLocked(Boolean isLocked) {
    this.isLocked = isLocked;
    return this;
  }

  /**
   * Get isLocked
   *
   * @return isLocked
   **/
  @Schema(description = "")
  public Boolean isIsLocked() {
    return isLocked;
  }

  public void setIsLocked(Boolean isLocked) {
    this.isLocked = isLocked;
  }

  public Issue labels(List<Label> labels) {
    this.labels = labels;
    return this;
  }

  public Issue addLabelsItem(Label labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<Label>();
    }
    this.labels.add(labelsItem);
    return this;
  }

  /**
   * Get labels
   *
   * @return labels
   **/
  @Schema(description = "")
  public List<Label> getLabels() {
    return labels;
  }

  public void setLabels(List<Label> labels) {
    this.labels = labels;
  }

  public Issue milestone(Milestone milestone) {
    this.milestone = milestone;
    return this;
  }

  /**
   * Get milestone
   *
   * @return milestone
   **/
  @Schema(description = "")
  public Milestone getMilestone() {
    return milestone;
  }

  public void setMilestone(Milestone milestone) {
    this.milestone = milestone;
  }

  public Issue number(Long number) {
    this.number = number;
    return this;
  }

  /**
   * Get number
   *
   * @return number
   **/
  @Schema(description = "")
  public Long getNumber() {
    return number;
  }

  public void setNumber(Long number) {
    this.number = number;
  }

  public Issue originalAuthor(String originalAuthor) {
    this.originalAuthor = originalAuthor;
    return this;
  }

  /**
   * Get originalAuthor
   *
   * @return originalAuthor
   **/
  @Schema(description = "")
  public String getOriginalAuthor() {
    return originalAuthor;
  }

  public void setOriginalAuthor(String originalAuthor) {
    this.originalAuthor = originalAuthor;
  }

  public Issue originalAuthorId(Long originalAuthorId) {
    this.originalAuthorId = originalAuthorId;
    return this;
  }

  /**
   * Get originalAuthorId
   *
   * @return originalAuthorId
   **/
  @Schema(description = "")
  public Long getOriginalAuthorId() {
    return originalAuthorId;
  }

  public void setOriginalAuthorId(Long originalAuthorId) {
    this.originalAuthorId = originalAuthorId;
  }

  public Issue pinOrder(Long pinOrder) {
    this.pinOrder = pinOrder;
    return this;
  }

  /**
   * Get pinOrder
   *
   * @return pinOrder
   **/
  @Schema(description = "")
  public Long getPinOrder() {
    return pinOrder;
  }

  public void setPinOrder(Long pinOrder) {
    this.pinOrder = pinOrder;
  }

  public Issue pullRequest(PullRequestMeta pullRequest) {
    this.pullRequest = pullRequest;
    return this;
  }

  /**
   * Get pullRequest
   *
   * @return pullRequest
   **/
  @Schema(description = "")
  public PullRequestMeta getPullRequest() {
    return pullRequest;
  }

  public void setPullRequest(PullRequestMeta pullRequest) {
    this.pullRequest = pullRequest;
  }

  public Issue ref(String ref) {
    this.ref = ref;
    return this;
  }

  /**
   * Get ref
   *
   * @return ref
   **/
  @Schema(description = "")
  public String getRef() {
    return ref;
  }

  public void setRef(String ref) {
    this.ref = ref;
  }

  public Issue repository(RepositoryMeta repository) {
    this.repository = repository;
    return this;
  }

  /**
   * Get repository
   *
   * @return repository
   **/
  @Schema(description = "")
  public RepositoryMeta getRepository() {
    return repository;
  }

  public void setRepository(RepositoryMeta repository) {
    this.repository = repository;
  }

  public Issue state(String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   *
   * @return state
   **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public Issue title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   *
   * @return title
   **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Issue updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   *
   * @return updatedAt
   **/
  @Schema(description = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Issue url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   *
   * @return url
   **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public Issue user(User user) {
    this.user = user;
    return this;
  }

  /**
   * Get user
   *
   * @return user
   **/
  @Schema(description = "")
  public User getUser() {
    return user;
  }

  public void setUser(User user) {
    this.user = user;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Issue issue = (Issue) o;
    return Objects.equals(this.assets, issue.assets) &&
           Objects.equals(this.assignee, issue.assignee) &&
           Objects.equals(this.assignees, issue.assignees) &&
           Objects.equals(this.body, issue.body) &&
           Objects.equals(this.closedAt, issue.closedAt) &&
           Objects.equals(this.comments, issue.comments) &&
           Objects.equals(this.createdAt, issue.createdAt) &&
           Objects.equals(this.dueDate, issue.dueDate) &&
           Objects.equals(this.htmlUrl, issue.htmlUrl) &&
           Objects.equals(this.id, issue.id) &&
           Objects.equals(this.isLocked, issue.isLocked) &&
           Objects.equals(this.labels, issue.labels) &&
           Objects.equals(this.milestone, issue.milestone) &&
           Objects.equals(this.number, issue.number) &&
           Objects.equals(this.originalAuthor, issue.originalAuthor) &&
           Objects.equals(this.originalAuthorId, issue.originalAuthorId) &&
           Objects.equals(this.pinOrder, issue.pinOrder) &&
           Objects.equals(this.pullRequest, issue.pullRequest) &&
           Objects.equals(this.ref, issue.ref) &&
           Objects.equals(this.repository, issue.repository) &&
           Objects.equals(this.state, issue.state) &&
           Objects.equals(this.title, issue.title) &&
           Objects.equals(this.updatedAt, issue.updatedAt) &&
           Objects.equals(this.url, issue.url) &&
           Objects.equals(this.user, issue.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assets, assignee, assignees, body, closedAt, comments, createdAt, dueDate, htmlUrl, id, isLocked, labels, milestone, number, originalAuthor, originalAuthorId, pinOrder, pullRequest, ref, repository, state, title, updatedAt, url, user);
  }


  @Override
  public String toString() {

    String sb = "class Issue {\n" +
                "    assets: " + toIndentedString(assets) + "\n" +
                "    assignee: " + toIndentedString(assignee) + "\n" +
                "    assignees: " + toIndentedString(assignees) + "\n" +
                "    body: " + toIndentedString(body) + "\n" +
                "    closedAt: " + toIndentedString(closedAt) + "\n" +
                "    comments: " + toIndentedString(comments) + "\n" +
                "    createdAt: " + toIndentedString(createdAt) + "\n" +
                "    dueDate: " + toIndentedString(dueDate) + "\n" +
                "    htmlUrl: " + toIndentedString(htmlUrl) + "\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    isLocked: " + toIndentedString(isLocked) + "\n" +
                "    labels: " + toIndentedString(labels) + "\n" +
                "    milestone: " + toIndentedString(milestone) + "\n" +
                "    number: " + toIndentedString(number) + "\n" +
                "    originalAuthor: " + toIndentedString(originalAuthor) + "\n" +
                "    originalAuthorId: " + toIndentedString(originalAuthorId) + "\n" +
                "    pinOrder: " + toIndentedString(pinOrder) + "\n" +
                "    pullRequest: " + toIndentedString(pullRequest) + "\n" +
                "    ref: " + toIndentedString(ref) + "\n" +
                "    repository: " + toIndentedString(repository) + "\n" +
                "    state: " + toIndentedString(state) + "\n" +
                "    title: " + toIndentedString(title) + "\n" +
                "    updatedAt: " + toIndentedString(updatedAt) + "\n" +
                "    url: " + toIndentedString(url) + "\n" +
                "    user: " + toIndentedString(user) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
