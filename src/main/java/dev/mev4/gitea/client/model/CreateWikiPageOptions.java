/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * CreateWikiPageOptions form for creating wiki
 */
@Schema(description = "CreateWikiPageOptions form for creating wiki")
public class CreateWikiPageOptions {
  @SerializedName("content_base64")
  private String contentBase64;

  @SerializedName("message")
  private String message;

  @SerializedName("title")
  private String title;

  public CreateWikiPageOptions contentBase64(String contentBase64) {
    this.contentBase64 = contentBase64;
    return this;
  }

  /**
   * content must be base64 encoded
   *
   * @return contentBase64
   **/
  @Schema(description = "content must be base64 encoded")
  public String getContentBase64() {
    return contentBase64;
  }

  public void setContentBase64(String contentBase64) {
    this.contentBase64 = contentBase64;
  }

  public CreateWikiPageOptions message(String message) {
    this.message = message;
    return this;
  }

  /**
   * optional commit message summarizing the change
   *
   * @return message
   **/
  @Schema(description = "optional commit message summarizing the change")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public CreateWikiPageOptions title(String title) {
    this.title = title;
    return this;
  }

  /**
   * page title. leave empty to keep unchanged
   *
   * @return title
   **/
  @Schema(description = "page title. leave empty to keep unchanged")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateWikiPageOptions createWikiPageOptions = (CreateWikiPageOptions) o;
    return Objects.equals(this.contentBase64, createWikiPageOptions.contentBase64) &&
           Objects.equals(this.message, createWikiPageOptions.message) &&
           Objects.equals(this.title, createWikiPageOptions.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentBase64, message, title);
  }


  @Override
  public String toString() {

    String sb = "class CreateWikiPageOptions {\n" +
                "    contentBase64: " + toIndentedString(contentBase64) + "\n" +
                "    message: " + toIndentedString(message) + "\n" +
                "    title: " + toIndentedString(title) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
