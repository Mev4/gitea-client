/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.io.IOException;
import java.util.Objects;

/**
 * CreateMilestoneOption options for creating a milestone
 */
@Schema(description = "CreateMilestoneOption options for creating a milestone")
public class CreateMilestoneOption {
  @SerializedName("description")
  private String description;

  @SerializedName("due_on")
  private OffsetDateTime dueOn;
  @SerializedName("state")
  private StateEnum state;
  @SerializedName("title")
  private String title;

  /**
   * Gets or Sets state
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    @SerializedName("open")
    OPEN("open"),
    @SerializedName("closed")
    CLOSED("closed");

    private final String value;

    StateEnum(String value) {
      this.value = value;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StateEnum.fromValue((String) (value));
      }
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String input) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
  }

  public CreateMilestoneOption description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   *
   * @return description
   **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateMilestoneOption dueOn(OffsetDateTime dueOn) {
    this.dueOn = dueOn;
    return this;
  }

  /**
   * Get dueOn
   *
   * @return dueOn
   **/
  @Schema(description = "")
  public OffsetDateTime getDueOn() {
    return dueOn;
  }

  public void setDueOn(OffsetDateTime dueOn) {
    this.dueOn = dueOn;
  }

  public CreateMilestoneOption state(StateEnum state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   *
   * @return state
   **/
  @Schema(description = "")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public CreateMilestoneOption title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   *
   * @return title
   **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateMilestoneOption createMilestoneOption = (CreateMilestoneOption) o;
    return Objects.equals(this.description, createMilestoneOption.description) &&
           Objects.equals(this.dueOn, createMilestoneOption.dueOn) &&
           this.state == createMilestoneOption.state &&
           Objects.equals(this.title, createMilestoneOption.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, dueOn, state, title);
  }


  @Override
  public String toString() {

    String sb = "class CreateMilestoneOption {\n" +
                "    description: " + toIndentedString(description) + "\n" +
                "    dueOn: " + toIndentedString(dueOn) + "\n" +
                "    state: " + toIndentedString(state) + "\n" +
                "    title: " + toIndentedString(title) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
