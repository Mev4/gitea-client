/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * UserBadgeOption options for link between users and badges
 */
@Schema(description = "UserBadgeOption options for link between users and badges")
public class UserBadgeOption {
  @SerializedName("badge_slugs")
  private List<String> badgeSlugs;

  public UserBadgeOption badgeSlugs(List<String> badgeSlugs) {
    this.badgeSlugs = badgeSlugs;
    return this;
  }

  public UserBadgeOption addBadgeSlugsItem(String badgeSlugsItem) {
    if (this.badgeSlugs == null) {
      this.badgeSlugs = new ArrayList<String>();
    }
    this.badgeSlugs.add(badgeSlugsItem);
    return this;
  }

  /**
   * Get badgeSlugs
   *
   * @return badgeSlugs
   **/
  @Schema(example = "[\"badge1\",\"badge2\"]", description = "")
  public List<String> getBadgeSlugs() {
    return badgeSlugs;
  }

  public void setBadgeSlugs(List<String> badgeSlugs) {
    this.badgeSlugs = badgeSlugs;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserBadgeOption userBadgeOption = (UserBadgeOption) o;
    return Objects.equals(this.badgeSlugs, userBadgeOption.badgeSlugs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(badgeSlugs);
  }


  @Override
  public String toString() {

    String sb = "class UserBadgeOption {\n" +
                "    badgeSlugs: " + toIndentedString(badgeSlugs) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
