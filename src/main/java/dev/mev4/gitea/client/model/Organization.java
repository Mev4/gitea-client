/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * Organization represents an organization
 */
@Schema(description = "Organization represents an organization")
public class Organization {
  @SerializedName("avatar_url")
  private String avatarUrl;

  @SerializedName("description")
  private String description;

  @SerializedName("email")
  private String email;

  @SerializedName("full_name")
  private String fullName;

  @SerializedName("id")
  private Long id;

  @SerializedName("location")
  private String location;

  @SerializedName("name")
  private String name;

  @SerializedName("repo_admin_change_team_access")
  private Boolean repoAdminChangeTeamAccess;

  @SerializedName("username")
  private String username;

  @SerializedName("visibility")
  private String visibility;

  @SerializedName("website")
  private String website;

  public Organization avatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

  /**
   * Get avatarUrl
   *
   * @return avatarUrl
   **/
  @Schema(description = "")
  public String getAvatarUrl() {
    return avatarUrl;
  }

  public void setAvatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
  }

  public Organization description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   *
   * @return description
   **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Organization email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   *
   * @return email
   **/
  @Schema(description = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Organization fullName(String fullName) {
    this.fullName = fullName;
    return this;
  }

  /**
   * Get fullName
   *
   * @return fullName
   **/
  @Schema(description = "")
  public String getFullName() {
    return fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = fullName;
  }

  public Organization id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id
   **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Organization location(String location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   *
   * @return location
   **/
  @Schema(description = "")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public Organization name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   *
   * @return name
   **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Organization repoAdminChangeTeamAccess(Boolean repoAdminChangeTeamAccess) {
    this.repoAdminChangeTeamAccess = repoAdminChangeTeamAccess;
    return this;
  }

  /**
   * Get repoAdminChangeTeamAccess
   *
   * @return repoAdminChangeTeamAccess
   **/
  @Schema(description = "")
  public Boolean isRepoAdminChangeTeamAccess() {
    return repoAdminChangeTeamAccess;
  }

  public void setRepoAdminChangeTeamAccess(Boolean repoAdminChangeTeamAccess) {
    this.repoAdminChangeTeamAccess = repoAdminChangeTeamAccess;
  }

  public Organization username(String username) {
    this.username = username;
    return this;
  }

  /**
   * deprecated
   *
   * @return username
   **/
  @Schema(description = "deprecated")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public Organization visibility(String visibility) {
    this.visibility = visibility;
    return this;
  }

  /**
   * Get visibility
   *
   * @return visibility
   **/
  @Schema(description = "")
  public String getVisibility() {
    return visibility;
  }

  public void setVisibility(String visibility) {
    this.visibility = visibility;
  }

  public Organization website(String website) {
    this.website = website;
    return this;
  }

  /**
   * Get website
   *
   * @return website
   **/
  @Schema(description = "")
  public String getWebsite() {
    return website;
  }

  public void setWebsite(String website) {
    this.website = website;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Organization organization = (Organization) o;
    return Objects.equals(this.avatarUrl, organization.avatarUrl) &&
           Objects.equals(this.description, organization.description) &&
           Objects.equals(this.email, organization.email) &&
           Objects.equals(this.fullName, organization.fullName) &&
           Objects.equals(this.id, organization.id) &&
           Objects.equals(this.location, organization.location) &&
           Objects.equals(this.name, organization.name) &&
           Objects.equals(this.repoAdminChangeTeamAccess, organization.repoAdminChangeTeamAccess) &&
           Objects.equals(this.username, organization.username) &&
           Objects.equals(this.visibility, organization.visibility) &&
           Objects.equals(this.website, organization.website);
  }

  @Override
  public int hashCode() {
    return Objects.hash(avatarUrl, description, email, fullName, id, location, name, repoAdminChangeTeamAccess, username, visibility, website);
  }


  @Override
  public String toString() {

    String sb = "class Organization {\n" +
                "    avatarUrl: " + toIndentedString(avatarUrl) + "\n" +
                "    description: " + toIndentedString(description) + "\n" +
                "    email: " + toIndentedString(email) + "\n" +
                "    fullName: " + toIndentedString(fullName) + "\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    location: " + toIndentedString(location) + "\n" +
                "    name: " + toIndentedString(name) + "\n" +
                "    repoAdminChangeTeamAccess: " + toIndentedString(repoAdminChangeTeamAccess) + "\n" +
                "    username: " + toIndentedString(username) + "\n" +
                "    visibility: " + toIndentedString(visibility) + "\n" +
                "    website: " + toIndentedString(website) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
