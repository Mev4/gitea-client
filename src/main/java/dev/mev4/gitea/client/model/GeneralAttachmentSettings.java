/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * GeneralAttachmentSettings contains global Attachment settings exposed by API
 */
@Schema(description = "GeneralAttachmentSettings contains global Attachment settings exposed by API")
public class GeneralAttachmentSettings {
  @SerializedName("allowed_types")
  private String allowedTypes;

  @SerializedName("enabled")
  private Boolean enabled;

  @SerializedName("max_files")
  private Long maxFiles;

  @SerializedName("max_size")
  private Long maxSize;

  public GeneralAttachmentSettings allowedTypes(String allowedTypes) {
    this.allowedTypes = allowedTypes;
    return this;
  }

  /**
   * Get allowedTypes
   *
   * @return allowedTypes
   **/
  @Schema(description = "")
  public String getAllowedTypes() {
    return allowedTypes;
  }

  public void setAllowedTypes(String allowedTypes) {
    this.allowedTypes = allowedTypes;
  }

  public GeneralAttachmentSettings enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   *
   * @return enabled
   **/
  @Schema(description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public GeneralAttachmentSettings maxFiles(Long maxFiles) {
    this.maxFiles = maxFiles;
    return this;
  }

  /**
   * Get maxFiles
   *
   * @return maxFiles
   **/
  @Schema(description = "")
  public Long getMaxFiles() {
    return maxFiles;
  }

  public void setMaxFiles(Long maxFiles) {
    this.maxFiles = maxFiles;
  }

  public GeneralAttachmentSettings maxSize(Long maxSize) {
    this.maxSize = maxSize;
    return this;
  }

  /**
   * Get maxSize
   *
   * @return maxSize
   **/
  @Schema(description = "")
  public Long getMaxSize() {
    return maxSize;
  }

  public void setMaxSize(Long maxSize) {
    this.maxSize = maxSize;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeneralAttachmentSettings generalAttachmentSettings = (GeneralAttachmentSettings) o;
    return Objects.equals(this.allowedTypes, generalAttachmentSettings.allowedTypes) &&
           Objects.equals(this.enabled, generalAttachmentSettings.enabled) &&
           Objects.equals(this.maxFiles, generalAttachmentSettings.maxFiles) &&
           Objects.equals(this.maxSize, generalAttachmentSettings.maxSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedTypes, enabled, maxFiles, maxSize);
  }


  @Override
  public String toString() {

    String sb = "class GeneralAttachmentSettings {\n" +
                "    allowedTypes: " + toIndentedString(allowedTypes) + "\n" +
                "    enabled: " + toIndentedString(enabled) + "\n" +
                "    maxFiles: " + toIndentedString(maxFiles) + "\n" +
                "    maxSize: " + toIndentedString(maxSize) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
