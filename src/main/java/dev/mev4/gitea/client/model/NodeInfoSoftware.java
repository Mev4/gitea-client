/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * NodeInfoSoftware contains Metadata about server software in use
 */
@Schema(description = "NodeInfoSoftware contains Metadata about server software in use")
public class NodeInfoSoftware {
  @SerializedName("homepage")
  private String homepage;

  @SerializedName("name")
  private String name;

  @SerializedName("repository")
  private String repository;

  @SerializedName("version")
  private String version;

  public NodeInfoSoftware homepage(String homepage) {
    this.homepage = homepage;
    return this;
  }

  /**
   * Get homepage
   *
   * @return homepage
   **/
  @Schema(description = "")
  public String getHomepage() {
    return homepage;
  }

  public void setHomepage(String homepage) {
    this.homepage = homepage;
  }

  public NodeInfoSoftware name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   *
   * @return name
   **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public NodeInfoSoftware repository(String repository) {
    this.repository = repository;
    return this;
  }

  /**
   * Get repository
   *
   * @return repository
   **/
  @Schema(description = "")
  public String getRepository() {
    return repository;
  }

  public void setRepository(String repository) {
    this.repository = repository;
  }

  public NodeInfoSoftware version(String version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   *
   * @return version
   **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeInfoSoftware nodeInfoSoftware = (NodeInfoSoftware) o;
    return Objects.equals(this.homepage, nodeInfoSoftware.homepage) &&
           Objects.equals(this.name, nodeInfoSoftware.name) &&
           Objects.equals(this.repository, nodeInfoSoftware.repository) &&
           Objects.equals(this.version, nodeInfoSoftware.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(homepage, name, repository, version);
  }


  @Override
  public String toString() {

    String sb = "class NodeInfoSoftware {\n" +
                "    homepage: " + toIndentedString(homepage) + "\n" +
                "    name: " + toIndentedString(name) + "\n" +
                "    repository: " + toIndentedString(repository) + "\n" +
                "    version: " + toIndentedString(version) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
