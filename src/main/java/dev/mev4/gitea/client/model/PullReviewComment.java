/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * PullReviewComment represents a comment on a pull request review
 */
@Schema(description = "PullReviewComment represents a comment on a pull request review")
public class PullReviewComment {
  @SerializedName("body")
  private String body;

  @SerializedName("commit_id")
  private String commitId;

  @SerializedName("created_at")
  private OffsetDateTime createdAt;

  @SerializedName("diff_hunk")
  private String diffHunk;

  @SerializedName("html_url")
  private String htmlUrl;

  @SerializedName("id")
  private Long id;

  @SerializedName("original_commit_id")
  private String originalCommitId;

  @SerializedName("original_position")
  private Integer originalPosition;

  @SerializedName("path")
  private String path;

  @SerializedName("position")
  private Integer position;

  @SerializedName("pull_request_review_id")
  private Long pullRequestReviewId;

  @SerializedName("pull_request_url")
  private String pullRequestUrl;

  @SerializedName("resolver")
  private User resolver;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt;

  @SerializedName("user")
  private User user;

  public PullReviewComment body(String body) {
    this.body = body;
    return this;
  }

  /**
   * Get body
   *
   * @return body
   **/
  @Schema(description = "")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public PullReviewComment commitId(String commitId) {
    this.commitId = commitId;
    return this;
  }

  /**
   * Get commitId
   *
   * @return commitId
   **/
  @Schema(description = "")
  public String getCommitId() {
    return commitId;
  }

  public void setCommitId(String commitId) {
    this.commitId = commitId;
  }

  public PullReviewComment createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   *
   * @return createdAt
   **/
  @Schema(description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public PullReviewComment diffHunk(String diffHunk) {
    this.diffHunk = diffHunk;
    return this;
  }

  /**
   * Get diffHunk
   *
   * @return diffHunk
   **/
  @Schema(description = "")
  public String getDiffHunk() {
    return diffHunk;
  }

  public void setDiffHunk(String diffHunk) {
    this.diffHunk = diffHunk;
  }

  public PullReviewComment htmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
    return this;
  }

  /**
   * Get htmlUrl
   *
   * @return htmlUrl
   **/
  @Schema(description = "")
  public String getHtmlUrl() {
    return htmlUrl;
  }

  public void setHtmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
  }

  public PullReviewComment id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id
   **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public PullReviewComment originalCommitId(String originalCommitId) {
    this.originalCommitId = originalCommitId;
    return this;
  }

  /**
   * Get originalCommitId
   *
   * @return originalCommitId
   **/
  @Schema(description = "")
  public String getOriginalCommitId() {
    return originalCommitId;
  }

  public void setOriginalCommitId(String originalCommitId) {
    this.originalCommitId = originalCommitId;
  }

  public PullReviewComment originalPosition(Integer originalPosition) {
    this.originalPosition = originalPosition;
    return this;
  }

  /**
   * Get originalPosition
   *
   * @return originalPosition
   **/
  @Schema(description = "")
  public Integer getOriginalPosition() {
    return originalPosition;
  }

  public void setOriginalPosition(Integer originalPosition) {
    this.originalPosition = originalPosition;
  }

  public PullReviewComment path(String path) {
    this.path = path;
    return this;
  }

  /**
   * Get path
   *
   * @return path
   **/
  @Schema(description = "")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public PullReviewComment position(Integer position) {
    this.position = position;
    return this;
  }

  /**
   * Get position
   *
   * @return position
   **/
  @Schema(description = "")
  public Integer getPosition() {
    return position;
  }

  public void setPosition(Integer position) {
    this.position = position;
  }

  public PullReviewComment pullRequestReviewId(Long pullRequestReviewId) {
    this.pullRequestReviewId = pullRequestReviewId;
    return this;
  }

  /**
   * Get pullRequestReviewId
   *
   * @return pullRequestReviewId
   **/
  @Schema(description = "")
  public Long getPullRequestReviewId() {
    return pullRequestReviewId;
  }

  public void setPullRequestReviewId(Long pullRequestReviewId) {
    this.pullRequestReviewId = pullRequestReviewId;
  }

  public PullReviewComment pullRequestUrl(String pullRequestUrl) {
    this.pullRequestUrl = pullRequestUrl;
    return this;
  }

  /**
   * Get pullRequestUrl
   *
   * @return pullRequestUrl
   **/
  @Schema(description = "")
  public String getPullRequestUrl() {
    return pullRequestUrl;
  }

  public void setPullRequestUrl(String pullRequestUrl) {
    this.pullRequestUrl = pullRequestUrl;
  }

  public PullReviewComment resolver(User resolver) {
    this.resolver = resolver;
    return this;
  }

  /**
   * Get resolver
   *
   * @return resolver
   **/
  @Schema(description = "")
  public User getResolver() {
    return resolver;
  }

  public void setResolver(User resolver) {
    this.resolver = resolver;
  }

  public PullReviewComment updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   *
   * @return updatedAt
   **/
  @Schema(description = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public PullReviewComment user(User user) {
    this.user = user;
    return this;
  }

  /**
   * Get user
   *
   * @return user
   **/
  @Schema(description = "")
  public User getUser() {
    return user;
  }

  public void setUser(User user) {
    this.user = user;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PullReviewComment pullReviewComment = (PullReviewComment) o;
    return Objects.equals(this.body, pullReviewComment.body) &&
           Objects.equals(this.commitId, pullReviewComment.commitId) &&
           Objects.equals(this.createdAt, pullReviewComment.createdAt) &&
           Objects.equals(this.diffHunk, pullReviewComment.diffHunk) &&
           Objects.equals(this.htmlUrl, pullReviewComment.htmlUrl) &&
           Objects.equals(this.id, pullReviewComment.id) &&
           Objects.equals(this.originalCommitId, pullReviewComment.originalCommitId) &&
           Objects.equals(this.originalPosition, pullReviewComment.originalPosition) &&
           Objects.equals(this.path, pullReviewComment.path) &&
           Objects.equals(this.position, pullReviewComment.position) &&
           Objects.equals(this.pullRequestReviewId, pullReviewComment.pullRequestReviewId) &&
           Objects.equals(this.pullRequestUrl, pullReviewComment.pullRequestUrl) &&
           Objects.equals(this.resolver, pullReviewComment.resolver) &&
           Objects.equals(this.updatedAt, pullReviewComment.updatedAt) &&
           Objects.equals(this.user, pullReviewComment.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(body, commitId, createdAt, diffHunk, htmlUrl, id, originalCommitId, originalPosition, path, position, pullRequestReviewId, pullRequestUrl, resolver, updatedAt, user);
  }


  @Override
  public String toString() {

    String sb = "class PullReviewComment {\n" +
                "    body: " + toIndentedString(body) + "\n" +
                "    commitId: " + toIndentedString(commitId) + "\n" +
                "    createdAt: " + toIndentedString(createdAt) + "\n" +
                "    diffHunk: " + toIndentedString(diffHunk) + "\n" +
                "    htmlUrl: " + toIndentedString(htmlUrl) + "\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    originalCommitId: " + toIndentedString(originalCommitId) + "\n" +
                "    originalPosition: " + toIndentedString(originalPosition) + "\n" +
                "    path: " + toIndentedString(path) + "\n" +
                "    position: " + toIndentedString(position) + "\n" +
                "    pullRequestReviewId: " + toIndentedString(pullRequestReviewId) + "\n" +
                "    pullRequestUrl: " + toIndentedString(pullRequestUrl) + "\n" +
                "    resolver: " + toIndentedString(resolver) + "\n" +
                "    updatedAt: " + toIndentedString(updatedAt) + "\n" +
                "    user: " + toIndentedString(user) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
