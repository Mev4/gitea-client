/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * PayloadCommit represents a commit
 */
@Schema(description = "PayloadCommit represents a commit")
public class PayloadCommit {
  @SerializedName("added")
  private List<String> added;

  @SerializedName("author")
  private PayloadUser author;

  @SerializedName("committer")
  private PayloadUser committer;

  @SerializedName("id")
  private String id;

  @SerializedName("message")
  private String message;

  @SerializedName("modified")
  private List<String> modified;

  @SerializedName("removed")
  private List<String> removed;

  @SerializedName("timestamp")
  private OffsetDateTime timestamp;

  @SerializedName("url")
  private String url;

  @SerializedName("verification")
  private PayloadCommitVerification verification;

  public PayloadCommit added(List<String> added) {
    this.added = added;
    return this;
  }

  public PayloadCommit addAddedItem(String addedItem) {
    if (this.added == null) {
      this.added = new ArrayList<String>();
    }
    this.added.add(addedItem);
    return this;
  }

  /**
   * Get added
   *
   * @return added
   **/
  @Schema(description = "")
  public List<String> getAdded() {
    return added;
  }

  public void setAdded(List<String> added) {
    this.added = added;
  }

  public PayloadCommit author(PayloadUser author) {
    this.author = author;
    return this;
  }

  /**
   * Get author
   *
   * @return author
   **/
  @Schema(description = "")
  public PayloadUser getAuthor() {
    return author;
  }

  public void setAuthor(PayloadUser author) {
    this.author = author;
  }

  public PayloadCommit committer(PayloadUser committer) {
    this.committer = committer;
    return this;
  }

  /**
   * Get committer
   *
   * @return committer
   **/
  @Schema(description = "")
  public PayloadUser getCommitter() {
    return committer;
  }

  public void setCommitter(PayloadUser committer) {
    this.committer = committer;
  }

  public PayloadCommit id(String id) {
    this.id = id;
    return this;
  }

  /**
   * sha1 hash of the commit
   *
   * @return id
   **/
  @Schema(description = "sha1 hash of the commit")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PayloadCommit message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   *
   * @return message
   **/
  @Schema(description = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public PayloadCommit modified(List<String> modified) {
    this.modified = modified;
    return this;
  }

  public PayloadCommit addModifiedItem(String modifiedItem) {
    if (this.modified == null) {
      this.modified = new ArrayList<String>();
    }
    this.modified.add(modifiedItem);
    return this;
  }

  /**
   * Get modified
   *
   * @return modified
   **/
  @Schema(description = "")
  public List<String> getModified() {
    return modified;
  }

  public void setModified(List<String> modified) {
    this.modified = modified;
  }

  public PayloadCommit removed(List<String> removed) {
    this.removed = removed;
    return this;
  }

  public PayloadCommit addRemovedItem(String removedItem) {
    if (this.removed == null) {
      this.removed = new ArrayList<String>();
    }
    this.removed.add(removedItem);
    return this;
  }

  /**
   * Get removed
   *
   * @return removed
   **/
  @Schema(description = "")
  public List<String> getRemoved() {
    return removed;
  }

  public void setRemoved(List<String> removed) {
    this.removed = removed;
  }

  public PayloadCommit timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Get timestamp
   *
   * @return timestamp
   **/
  @Schema(description = "")
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }

  public PayloadCommit url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   *
   * @return url
   **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public PayloadCommit verification(PayloadCommitVerification verification) {
    this.verification = verification;
    return this;
  }

  /**
   * Get verification
   *
   * @return verification
   **/
  @Schema(description = "")
  public PayloadCommitVerification getVerification() {
    return verification;
  }

  public void setVerification(PayloadCommitVerification verification) {
    this.verification = verification;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayloadCommit payloadCommit = (PayloadCommit) o;
    return Objects.equals(this.added, payloadCommit.added) &&
           Objects.equals(this.author, payloadCommit.author) &&
           Objects.equals(this.committer, payloadCommit.committer) &&
           Objects.equals(this.id, payloadCommit.id) &&
           Objects.equals(this.message, payloadCommit.message) &&
           Objects.equals(this.modified, payloadCommit.modified) &&
           Objects.equals(this.removed, payloadCommit.removed) &&
           Objects.equals(this.timestamp, payloadCommit.timestamp) &&
           Objects.equals(this.url, payloadCommit.url) &&
           Objects.equals(this.verification, payloadCommit.verification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(added, author, committer, id, message, modified, removed, timestamp, url, verification);
  }


  @Override
  public String toString() {

    String sb = "class PayloadCommit {\n" +
                "    added: " + toIndentedString(added) + "\n" +
                "    author: " + toIndentedString(author) + "\n" +
                "    committer: " + toIndentedString(committer) + "\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    message: " + toIndentedString(message) + "\n" +
                "    modified: " + toIndentedString(modified) + "\n" +
                "    removed: " + toIndentedString(removed) + "\n" +
                "    timestamp: " + toIndentedString(timestamp) + "\n" +
                "    url: " + toIndentedString(url) + "\n" +
                "    verification: " + toIndentedString(verification) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
