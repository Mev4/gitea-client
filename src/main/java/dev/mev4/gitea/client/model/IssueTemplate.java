/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * IssueTemplate represents an issue template for a repository
 */
@Schema(description = "IssueTemplate represents an issue template for a repository")
public class IssueTemplate {
  @SerializedName("about")
  private String about;

  @SerializedName("assignees")
  private IssueTemplateStringSlice assignees;

  @SerializedName("body")
  private List<IssueFormField> body;

  @SerializedName("content")
  private String content;

  @SerializedName("file_name")
  private String fileName;

  @SerializedName("labels")
  private IssueTemplateStringSlice labels;

  @SerializedName("name")
  private String name;

  @SerializedName("ref")
  private String ref;

  @SerializedName("title")
  private String title;

  public IssueTemplate about(String about) {
    this.about = about;
    return this;
  }

  /**
   * Get about
   *
   * @return about
   **/
  @Schema(description = "")
  public String getAbout() {
    return about;
  }

  public void setAbout(String about) {
    this.about = about;
  }

  public IssueTemplate assignees(IssueTemplateStringSlice assignees) {
    this.assignees = assignees;
    return this;
  }

  /**
   * Get assignees
   *
   * @return assignees
   **/
  @Schema(description = "")
  public IssueTemplateStringSlice getAssignees() {
    return assignees;
  }

  public void setAssignees(IssueTemplateStringSlice assignees) {
    this.assignees = assignees;
  }

  public IssueTemplate body(List<IssueFormField> body) {
    this.body = body;
    return this;
  }

  public IssueTemplate addBodyItem(IssueFormField bodyItem) {
    if (this.body == null) {
      this.body = new ArrayList<IssueFormField>();
    }
    this.body.add(bodyItem);
    return this;
  }

  /**
   * Get body
   *
   * @return body
   **/
  @Schema(description = "")
  public List<IssueFormField> getBody() {
    return body;
  }

  public void setBody(List<IssueFormField> body) {
    this.body = body;
  }

  public IssueTemplate content(String content) {
    this.content = content;
    return this;
  }

  /**
   * Get content
   *
   * @return content
   **/
  @Schema(description = "")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public IssueTemplate fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

  /**
   * Get fileName
   *
   * @return fileName
   **/
  @Schema(description = "")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public IssueTemplate labels(IssueTemplateStringSlice labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Get labels
   *
   * @return labels
   **/
  @Schema(description = "")
  public IssueTemplateStringSlice getLabels() {
    return labels;
  }

  public void setLabels(IssueTemplateStringSlice labels) {
    this.labels = labels;
  }

  public IssueTemplate name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   *
   * @return name
   **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public IssueTemplate ref(String ref) {
    this.ref = ref;
    return this;
  }

  /**
   * Get ref
   *
   * @return ref
   **/
  @Schema(description = "")
  public String getRef() {
    return ref;
  }

  public void setRef(String ref) {
    this.ref = ref;
  }

  public IssueTemplate title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   *
   * @return title
   **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IssueTemplate issueTemplate = (IssueTemplate) o;
    return Objects.equals(this.about, issueTemplate.about) &&
           Objects.equals(this.assignees, issueTemplate.assignees) &&
           Objects.equals(this.body, issueTemplate.body) &&
           Objects.equals(this.content, issueTemplate.content) &&
           Objects.equals(this.fileName, issueTemplate.fileName) &&
           Objects.equals(this.labels, issueTemplate.labels) &&
           Objects.equals(this.name, issueTemplate.name) &&
           Objects.equals(this.ref, issueTemplate.ref) &&
           Objects.equals(this.title, issueTemplate.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(about, assignees, body, content, fileName, labels, name, ref, title);
  }


  @Override
  public String toString() {

    String sb = "class IssueTemplate {\n" +
                "    about: " + toIndentedString(about) + "\n" +
                "    assignees: " + toIndentedString(assignees) + "\n" +
                "    body: " + toIndentedString(body) + "\n" +
                "    content: " + toIndentedString(content) + "\n" +
                "    fileName: " + toIndentedString(fileName) + "\n" +
                "    labels: " + toIndentedString(labels) + "\n" +
                "    name: " + toIndentedString(name) + "\n" +
                "    ref: " + toIndentedString(ref) + "\n" +
                "    title: " + toIndentedString(title) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
