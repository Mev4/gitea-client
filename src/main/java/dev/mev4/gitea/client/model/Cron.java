/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * Cron represents a Cron task
 */
@Schema(description = "Cron represents a Cron task")
public class Cron {
  @SerializedName("exec_times")
  private Long execTimes;

  @SerializedName("name")
  private String name;

  @SerializedName("next")
  private OffsetDateTime next;

  @SerializedName("prev")
  private OffsetDateTime prev;

  @SerializedName("schedule")
  private String schedule;

  public Cron execTimes(Long execTimes) {
    this.execTimes = execTimes;
    return this;
  }

  /**
   * Get execTimes
   *
   * @return execTimes
   **/
  @Schema(description = "")
  public Long getExecTimes() {
    return execTimes;
  }

  public void setExecTimes(Long execTimes) {
    this.execTimes = execTimes;
  }

  public Cron name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   *
   * @return name
   **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Cron next(OffsetDateTime next) {
    this.next = next;
    return this;
  }

  /**
   * Get next
   *
   * @return next
   **/
  @Schema(description = "")
  public OffsetDateTime getNext() {
    return next;
  }

  public void setNext(OffsetDateTime next) {
    this.next = next;
  }

  public Cron prev(OffsetDateTime prev) {
    this.prev = prev;
    return this;
  }

  /**
   * Get prev
   *
   * @return prev
   **/
  @Schema(description = "")
  public OffsetDateTime getPrev() {
    return prev;
  }

  public void setPrev(OffsetDateTime prev) {
    this.prev = prev;
  }

  public Cron schedule(String schedule) {
    this.schedule = schedule;
    return this;
  }

  /**
   * Get schedule
   *
   * @return schedule
   **/
  @Schema(description = "")
  public String getSchedule() {
    return schedule;
  }

  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Cron cron = (Cron) o;
    return Objects.equals(this.execTimes, cron.execTimes) &&
           Objects.equals(this.name, cron.name) &&
           Objects.equals(this.next, cron.next) &&
           Objects.equals(this.prev, cron.prev) &&
           Objects.equals(this.schedule, cron.schedule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(execTimes, name, next, prev, schedule);
  }


  @Override
  public String toString() {

    String sb = "class Cron {\n" +
                "    execTimes: " + toIndentedString(execTimes) + "\n" +
                "    name: " + toIndentedString(name) + "\n" +
                "    next: " + toIndentedString(next) + "\n" +
                "    prev: " + toIndentedString(prev) + "\n" +
                "    schedule: " + toIndentedString(schedule) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
