/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * CommitStatus holds a single status of a single Commit
 */
@Schema(description = "CommitStatus holds a single status of a single Commit")
public class CommitStatus {
  @SerializedName("context")
  private String context;

  @SerializedName("created_at")
  private OffsetDateTime createdAt;

  @SerializedName("creator")
  private User creator;

  @SerializedName("description")
  private String description;

  @SerializedName("id")
  private Long id;

  @SerializedName("status")
  private String status;

  @SerializedName("target_url")
  private String targetUrl;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt;

  @SerializedName("url")
  private String url;

  public CommitStatus context(String context) {
    this.context = context;
    return this;
  }

  /**
   * Get context
   *
   * @return context
   **/
  @Schema(description = "")
  public String getContext() {
    return context;
  }

  public void setContext(String context) {
    this.context = context;
  }

  public CommitStatus createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   *
   * @return createdAt
   **/
  @Schema(description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public CommitStatus creator(User creator) {
    this.creator = creator;
    return this;
  }

  /**
   * Get creator
   *
   * @return creator
   **/
  @Schema(description = "")
  public User getCreator() {
    return creator;
  }

  public void setCreator(User creator) {
    this.creator = creator;
  }

  public CommitStatus description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   *
   * @return description
   **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CommitStatus id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id
   **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public CommitStatus status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   *
   * @return status
   **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public CommitStatus targetUrl(String targetUrl) {
    this.targetUrl = targetUrl;
    return this;
  }

  /**
   * Get targetUrl
   *
   * @return targetUrl
   **/
  @Schema(description = "")
  public String getTargetUrl() {
    return targetUrl;
  }

  public void setTargetUrl(String targetUrl) {
    this.targetUrl = targetUrl;
  }

  public CommitStatus updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   *
   * @return updatedAt
   **/
  @Schema(description = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public CommitStatus url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   *
   * @return url
   **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommitStatus commitStatus = (CommitStatus) o;
    return Objects.equals(this.context, commitStatus.context) &&
           Objects.equals(this.createdAt, commitStatus.createdAt) &&
           Objects.equals(this.creator, commitStatus.creator) &&
           Objects.equals(this.description, commitStatus.description) &&
           Objects.equals(this.id, commitStatus.id) &&
           Objects.equals(this.status, commitStatus.status) &&
           Objects.equals(this.targetUrl, commitStatus.targetUrl) &&
           Objects.equals(this.updatedAt, commitStatus.updatedAt) &&
           Objects.equals(this.url, commitStatus.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(context, createdAt, creator, description, id, status, targetUrl, updatedAt, url);
  }


  @Override
  public String toString() {

    String sb = "class CommitStatus {\n" +
                "    context: " + toIndentedString(context) + "\n" +
                "    createdAt: " + toIndentedString(createdAt) + "\n" +
                "    creator: " + toIndentedString(creator) + "\n" +
                "    description: " + toIndentedString(description) + "\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    status: " + toIndentedString(status) + "\n" +
                "    targetUrl: " + toIndentedString(targetUrl) + "\n" +
                "    updatedAt: " + toIndentedString(updatedAt) + "\n" +
                "    url: " + toIndentedString(url) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
