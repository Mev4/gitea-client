/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;

import java.io.IOException;
import java.util.Objects;

/**
 * AddCollaboratorOption options when adding a user as a collaborator of a repository
 */
@Schema(description = "AddCollaboratorOption options when adding a user as a collaborator of a repository")
public class AddCollaboratorOption {
  @SerializedName("permission")
  private PermissionEnum permission;

  /**
   * Gets or Sets permission
   */
  @JsonAdapter(PermissionEnum.Adapter.class)
  public enum PermissionEnum {
    @SerializedName("read")
    READ("read"),
    @SerializedName("write")
    WRITE("write"),
    @SerializedName("admin")
    ADMIN("admin");

    private final String value;

    PermissionEnum(String value) {
      this.value = value;
    }

    public static class Adapter extends TypeAdapter<PermissionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PermissionEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public PermissionEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return PermissionEnum.fromValue((String) (value));
      }
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PermissionEnum fromValue(String input) {
      for (PermissionEnum b : PermissionEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
  }

  public AddCollaboratorOption permission(PermissionEnum permission) {
    this.permission = permission;
    return this;
  }

  /**
   * Get permission
   *
   * @return permission
   **/
  @Schema(description = "")
  public PermissionEnum getPermission() {
    return permission;
  }

  public void setPermission(PermissionEnum permission) {
    this.permission = permission;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddCollaboratorOption addCollaboratorOption = (AddCollaboratorOption) o;
    return this.permission == addCollaboratorOption.permission;
  }

  @Override
  public int hashCode() {
    return Objects.hash(permission);
  }


  @Override
  public String toString() {

    String sb = "class AddCollaboratorOption {\n" +
                "    permission: " + toIndentedString(permission) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
