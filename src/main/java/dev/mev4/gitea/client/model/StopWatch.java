/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * StopWatch represent a running stopwatch
 */
@Schema(description = "StopWatch represent a running stopwatch")
public class StopWatch {
  @SerializedName("created")
  private OffsetDateTime created;

  @SerializedName("duration")
  private String duration;

  @SerializedName("issue_index")
  private Long issueIndex;

  @SerializedName("issue_title")
  private String issueTitle;

  @SerializedName("repo_name")
  private String repoName;

  @SerializedName("repo_owner_name")
  private String repoOwnerName;

  @SerializedName("seconds")
  private Long seconds;

  public StopWatch created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

  /**
   * Get created
   *
   * @return created
   **/
  @Schema(description = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public StopWatch duration(String duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Get duration
   *
   * @return duration
   **/
  @Schema(description = "")
  public String getDuration() {
    return duration;
  }

  public void setDuration(String duration) {
    this.duration = duration;
  }

  public StopWatch issueIndex(Long issueIndex) {
    this.issueIndex = issueIndex;
    return this;
  }

  /**
   * Get issueIndex
   *
   * @return issueIndex
   **/
  @Schema(description = "")
  public Long getIssueIndex() {
    return issueIndex;
  }

  public void setIssueIndex(Long issueIndex) {
    this.issueIndex = issueIndex;
  }

  public StopWatch issueTitle(String issueTitle) {
    this.issueTitle = issueTitle;
    return this;
  }

  /**
   * Get issueTitle
   *
   * @return issueTitle
   **/
  @Schema(description = "")
  public String getIssueTitle() {
    return issueTitle;
  }

  public void setIssueTitle(String issueTitle) {
    this.issueTitle = issueTitle;
  }

  public StopWatch repoName(String repoName) {
    this.repoName = repoName;
    return this;
  }

  /**
   * Get repoName
   *
   * @return repoName
   **/
  @Schema(description = "")
  public String getRepoName() {
    return repoName;
  }

  public void setRepoName(String repoName) {
    this.repoName = repoName;
  }

  public StopWatch repoOwnerName(String repoOwnerName) {
    this.repoOwnerName = repoOwnerName;
    return this;
  }

  /**
   * Get repoOwnerName
   *
   * @return repoOwnerName
   **/
  @Schema(description = "")
  public String getRepoOwnerName() {
    return repoOwnerName;
  }

  public void setRepoOwnerName(String repoOwnerName) {
    this.repoOwnerName = repoOwnerName;
  }

  public StopWatch seconds(Long seconds) {
    this.seconds = seconds;
    return this;
  }

  /**
   * Get seconds
   *
   * @return seconds
   **/
  @Schema(description = "")
  public Long getSeconds() {
    return seconds;
  }

  public void setSeconds(Long seconds) {
    this.seconds = seconds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StopWatch stopWatch = (StopWatch) o;
    return Objects.equals(this.created, stopWatch.created) &&
           Objects.equals(this.duration, stopWatch.duration) &&
           Objects.equals(this.issueIndex, stopWatch.issueIndex) &&
           Objects.equals(this.issueTitle, stopWatch.issueTitle) &&
           Objects.equals(this.repoName, stopWatch.repoName) &&
           Objects.equals(this.repoOwnerName, stopWatch.repoOwnerName) &&
           Objects.equals(this.seconds, stopWatch.seconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, duration, issueIndex, issueTitle, repoName, repoOwnerName, seconds);
  }


  @Override
  public String toString() {

    String sb = "class StopWatch {\n" +
                "    created: " + toIndentedString(created) + "\n" +
                "    duration: " + toIndentedString(duration) + "\n" +
                "    issueIndex: " + toIndentedString(issueIndex) + "\n" +
                "    issueTitle: " + toIndentedString(issueTitle) + "\n" +
                "    repoName: " + toIndentedString(repoName) + "\n" +
                "    repoOwnerName: " + toIndentedString(repoOwnerName) + "\n" +
                "    seconds: " + toIndentedString(seconds) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
