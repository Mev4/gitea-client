/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * RepoCommit
 */

public class RepoCommit {
  @SerializedName("author")
  private CommitUser author;

  @SerializedName("committer")
  private CommitUser committer;

  @SerializedName("message")
  private String message;

  @SerializedName("tree")
  private CommitMeta tree;

  @SerializedName("url")
  private String url;

  @SerializedName("verification")
  private PayloadCommitVerification verification;

  public RepoCommit author(CommitUser author) {
    this.author = author;
    return this;
  }

  /**
   * Get author
   *
   * @return author
   **/
  @Schema(description = "")
  public CommitUser getAuthor() {
    return author;
  }

  public void setAuthor(CommitUser author) {
    this.author = author;
  }

  public RepoCommit committer(CommitUser committer) {
    this.committer = committer;
    return this;
  }

  /**
   * Get committer
   *
   * @return committer
   **/
  @Schema(description = "")
  public CommitUser getCommitter() {
    return committer;
  }

  public void setCommitter(CommitUser committer) {
    this.committer = committer;
  }

  public RepoCommit message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   *
   * @return message
   **/
  @Schema(description = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public RepoCommit tree(CommitMeta tree) {
    this.tree = tree;
    return this;
  }

  /**
   * Get tree
   *
   * @return tree
   **/
  @Schema(description = "")
  public CommitMeta getTree() {
    return tree;
  }

  public void setTree(CommitMeta tree) {
    this.tree = tree;
  }

  public RepoCommit url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   *
   * @return url
   **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public RepoCommit verification(PayloadCommitVerification verification) {
    this.verification = verification;
    return this;
  }

  /**
   * Get verification
   *
   * @return verification
   **/
  @Schema(description = "")
  public PayloadCommitVerification getVerification() {
    return verification;
  }

  public void setVerification(PayloadCommitVerification verification) {
    this.verification = verification;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RepoCommit repoCommit = (RepoCommit) o;
    return Objects.equals(this.author, repoCommit.author) &&
           Objects.equals(this.committer, repoCommit.committer) &&
           Objects.equals(this.message, repoCommit.message) &&
           Objects.equals(this.tree, repoCommit.tree) &&
           Objects.equals(this.url, repoCommit.url) &&
           Objects.equals(this.verification, repoCommit.verification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(author, committer, message, tree, url, verification);
  }


  @Override
  public String toString() {

    String sb = "class RepoCommit {\n" +
                "    author: " + toIndentedString(author) + "\n" +
                "    committer: " + toIndentedString(committer) + "\n" +
                "    message: " + toIndentedString(message) + "\n" +
                "    tree: " + toIndentedString(tree) + "\n" +
                "    url: " + toIndentedString(url) + "\n" +
                "    verification: " + toIndentedString(verification) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
