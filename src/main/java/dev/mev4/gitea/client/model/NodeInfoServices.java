/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * NodeInfoServices contains the third party sites this server can connect to via their application API
 */
@Schema(description = "NodeInfoServices contains the third party sites this server can connect to via their application API")
public class NodeInfoServices {
  @SerializedName("inbound")
  private List<String> inbound;

  @SerializedName("outbound")
  private List<String> outbound;

  public NodeInfoServices inbound(List<String> inbound) {
    this.inbound = inbound;
    return this;
  }

  public NodeInfoServices addInboundItem(String inboundItem) {
    if (this.inbound == null) {
      this.inbound = new ArrayList<String>();
    }
    this.inbound.add(inboundItem);
    return this;
  }

  /**
   * Get inbound
   *
   * @return inbound
   **/
  @Schema(description = "")
  public List<String> getInbound() {
    return inbound;
  }

  public void setInbound(List<String> inbound) {
    this.inbound = inbound;
  }

  public NodeInfoServices outbound(List<String> outbound) {
    this.outbound = outbound;
    return this;
  }

  public NodeInfoServices addOutboundItem(String outboundItem) {
    if (this.outbound == null) {
      this.outbound = new ArrayList<String>();
    }
    this.outbound.add(outboundItem);
    return this;
  }

  /**
   * Get outbound
   *
   * @return outbound
   **/
  @Schema(description = "")
  public List<String> getOutbound() {
    return outbound;
  }

  public void setOutbound(List<String> outbound) {
    this.outbound = outbound;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeInfoServices nodeInfoServices = (NodeInfoServices) o;
    return Objects.equals(this.inbound, nodeInfoServices.inbound) &&
           Objects.equals(this.outbound, nodeInfoServices.outbound);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inbound, outbound);
  }


  @Override
  public String toString() {

    String sb = "class NodeInfoServices {\n" +
                "    inbound: " + toIndentedString(inbound) + "\n" +
                "    outbound: " + toIndentedString(outbound) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
