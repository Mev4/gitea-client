/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * Reference
 */

public class Reference {
  @SerializedName("object")
  private GitObject object;

  @SerializedName("ref")
  private String ref;

  @SerializedName("url")
  private String url;

  public Reference object(GitObject object) {
    this.object = object;
    return this;
  }

  /**
   * Get object
   *
   * @return object
   **/
  @Schema(description = "")
  public GitObject getObject() {
    return object;
  }

  public void setObject(GitObject object) {
    this.object = object;
  }

  public Reference ref(String ref) {
    this.ref = ref;
    return this;
  }

  /**
   * Get ref
   *
   * @return ref
   **/
  @Schema(description = "")
  public String getRef() {
    return ref;
  }

  public void setRef(String ref) {
    this.ref = ref;
  }

  public Reference url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   *
   * @return url
   **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Reference reference = (Reference) o;
    return Objects.equals(this.object, reference.object) &&
           Objects.equals(this.ref, reference.ref) &&
           Objects.equals(this.url, reference.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(object, ref, url);
  }


  @Override
  public String toString() {

    String sb = "class Reference {\n" +
                "    object: " + toIndentedString(object) + "\n" +
                "    ref: " + toIndentedString(ref) + "\n" +
                "    url: " + toIndentedString(url) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
