/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * TagProtection represents a tag protection
 */
@Schema(description = "TagProtection represents a tag protection")
public class TagProtection {
  @SerializedName("created_at")
  private OffsetDateTime createdAt;

  @SerializedName("id")
  private Long id;

  @SerializedName("name_pattern")
  private String namePattern;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt;

  @SerializedName("whitelist_teams")
  private List<String> whitelistTeams;

  @SerializedName("whitelist_usernames")
  private List<String> whitelistUsernames;

  public TagProtection createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   *
   * @return createdAt
   **/
  @Schema(description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public TagProtection id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id
   **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public TagProtection namePattern(String namePattern) {
    this.namePattern = namePattern;
    return this;
  }

  /**
   * Get namePattern
   *
   * @return namePattern
   **/
  @Schema(description = "")
  public String getNamePattern() {
    return namePattern;
  }

  public void setNamePattern(String namePattern) {
    this.namePattern = namePattern;
  }

  public TagProtection updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   *
   * @return updatedAt
   **/
  @Schema(description = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public TagProtection whitelistTeams(List<String> whitelistTeams) {
    this.whitelistTeams = whitelistTeams;
    return this;
  }

  public TagProtection addWhitelistTeamsItem(String whitelistTeamsItem) {
    if (this.whitelistTeams == null) {
      this.whitelistTeams = new ArrayList<String>();
    }
    this.whitelistTeams.add(whitelistTeamsItem);
    return this;
  }

  /**
   * Get whitelistTeams
   *
   * @return whitelistTeams
   **/
  @Schema(description = "")
  public List<String> getWhitelistTeams() {
    return whitelistTeams;
  }

  public void setWhitelistTeams(List<String> whitelistTeams) {
    this.whitelistTeams = whitelistTeams;
  }

  public TagProtection whitelistUsernames(List<String> whitelistUsernames) {
    this.whitelistUsernames = whitelistUsernames;
    return this;
  }

  public TagProtection addWhitelistUsernamesItem(String whitelistUsernamesItem) {
    if (this.whitelistUsernames == null) {
      this.whitelistUsernames = new ArrayList<String>();
    }
    this.whitelistUsernames.add(whitelistUsernamesItem);
    return this;
  }

  /**
   * Get whitelistUsernames
   *
   * @return whitelistUsernames
   **/
  @Schema(description = "")
  public List<String> getWhitelistUsernames() {
    return whitelistUsernames;
  }

  public void setWhitelistUsernames(List<String> whitelistUsernames) {
    this.whitelistUsernames = whitelistUsernames;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TagProtection tagProtection = (TagProtection) o;
    return Objects.equals(this.createdAt, tagProtection.createdAt) &&
           Objects.equals(this.id, tagProtection.id) &&
           Objects.equals(this.namePattern, tagProtection.namePattern) &&
           Objects.equals(this.updatedAt, tagProtection.updatedAt) &&
           Objects.equals(this.whitelistTeams, tagProtection.whitelistTeams) &&
           Objects.equals(this.whitelistUsernames, tagProtection.whitelistUsernames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, id, namePattern, updatedAt, whitelistTeams, whitelistUsernames);
  }


  @Override
  public String toString() {

    String sb = "class TagProtection {\n" +
                "    createdAt: " + toIndentedString(createdAt) + "\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    namePattern: " + toIndentedString(namePattern) + "\n" +
                "    updatedAt: " + toIndentedString(updatedAt) + "\n" +
                "    whitelistTeams: " + toIndentedString(whitelistTeams) + "\n" +
                "    whitelistUsernames: " + toIndentedString(whitelistUsernames) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
