/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * GitTreeResponse returns a git tree
 */
@Schema(description = "GitTreeResponse returns a git tree")
public class GitTreeResponse {
  @SerializedName("page")
  private Long page;

  @SerializedName("sha")
  private String sha;

  @SerializedName("total_count")
  private Long totalCount;

  @SerializedName("tree")
  private List<GitEntry> tree;

  @SerializedName("truncated")
  private Boolean truncated;

  @SerializedName("url")
  private String url;

  public GitTreeResponse page(Long page) {
    this.page = page;
    return this;
  }

  /**
   * Get page
   *
   * @return page
   **/
  @Schema(description = "")
  public Long getPage() {
    return page;
  }

  public void setPage(Long page) {
    this.page = page;
  }

  public GitTreeResponse sha(String sha) {
    this.sha = sha;
    return this;
  }

  /**
   * Get sha
   *
   * @return sha
   **/
  @Schema(description = "")
  public String getSha() {
    return sha;
  }

  public void setSha(String sha) {
    this.sha = sha;
  }

  public GitTreeResponse totalCount(Long totalCount) {
    this.totalCount = totalCount;
    return this;
  }

  /**
   * Get totalCount
   *
   * @return totalCount
   **/
  @Schema(description = "")
  public Long getTotalCount() {
    return totalCount;
  }

  public void setTotalCount(Long totalCount) {
    this.totalCount = totalCount;
  }

  public GitTreeResponse tree(List<GitEntry> tree) {
    this.tree = tree;
    return this;
  }

  public GitTreeResponse addTreeItem(GitEntry treeItem) {
    if (this.tree == null) {
      this.tree = new ArrayList<GitEntry>();
    }
    this.tree.add(treeItem);
    return this;
  }

  /**
   * Get tree
   *
   * @return tree
   **/
  @Schema(description = "")
  public List<GitEntry> getTree() {
    return tree;
  }

  public void setTree(List<GitEntry> tree) {
    this.tree = tree;
  }

  public GitTreeResponse truncated(Boolean truncated) {
    this.truncated = truncated;
    return this;
  }

  /**
   * Get truncated
   *
   * @return truncated
   **/
  @Schema(description = "")
  public Boolean isTruncated() {
    return truncated;
  }

  public void setTruncated(Boolean truncated) {
    this.truncated = truncated;
  }

  public GitTreeResponse url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   *
   * @return url
   **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GitTreeResponse gitTreeResponse = (GitTreeResponse) o;
    return Objects.equals(this.page, gitTreeResponse.page) &&
           Objects.equals(this.sha, gitTreeResponse.sha) &&
           Objects.equals(this.totalCount, gitTreeResponse.totalCount) &&
           Objects.equals(this.tree, gitTreeResponse.tree) &&
           Objects.equals(this.truncated, gitTreeResponse.truncated) &&
           Objects.equals(this.url, gitTreeResponse.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(page, sha, totalCount, tree, truncated, url);
  }


  @Override
  public String toString() {

    String sb = "class GitTreeResponse {\n" +
                "    page: " + toIndentedString(page) + "\n" +
                "    sha: " + toIndentedString(sha) + "\n" +
                "    totalCount: " + toIndentedString(totalCount) + "\n" +
                "    tree: " + toIndentedString(tree) + "\n" +
                "    truncated: " + toIndentedString(truncated) + "\n" +
                "    url: " + toIndentedString(url) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
