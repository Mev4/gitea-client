/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * Tag represents a repository tag
 */
@Schema(description = "Tag represents a repository tag")
public class Tag {
  @SerializedName("commit")
  private CommitMeta commit;

  @SerializedName("id")
  private String id;

  @SerializedName("message")
  private String message;

  @SerializedName("name")
  private String name;

  @SerializedName("tarball_url")
  private String tarballUrl;

  @SerializedName("zipball_url")
  private String zipballUrl;

  public Tag commit(CommitMeta commit) {
    this.commit = commit;
    return this;
  }

  /**
   * Get commit
   *
   * @return commit
   **/
  @Schema(description = "")
  public CommitMeta getCommit() {
    return commit;
  }

  public void setCommit(CommitMeta commit) {
    this.commit = commit;
  }

  public Tag id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id
   **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Tag message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   *
   * @return message
   **/
  @Schema(description = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public Tag name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   *
   * @return name
   **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Tag tarballUrl(String tarballUrl) {
    this.tarballUrl = tarballUrl;
    return this;
  }

  /**
   * Get tarballUrl
   *
   * @return tarballUrl
   **/
  @Schema(description = "")
  public String getTarballUrl() {
    return tarballUrl;
  }

  public void setTarballUrl(String tarballUrl) {
    this.tarballUrl = tarballUrl;
  }

  public Tag zipballUrl(String zipballUrl) {
    this.zipballUrl = zipballUrl;
    return this;
  }

  /**
   * Get zipballUrl
   *
   * @return zipballUrl
   **/
  @Schema(description = "")
  public String getZipballUrl() {
    return zipballUrl;
  }

  public void setZipballUrl(String zipballUrl) {
    this.zipballUrl = zipballUrl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tag tag = (Tag) o;
    return Objects.equals(this.commit, tag.commit) &&
           Objects.equals(this.id, tag.id) &&
           Objects.equals(this.message, tag.message) &&
           Objects.equals(this.name, tag.name) &&
           Objects.equals(this.tarballUrl, tag.tarballUrl) &&
           Objects.equals(this.zipballUrl, tag.zipballUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commit, id, message, name, tarballUrl, zipballUrl);
  }


  @Override
  public String toString() {

    String sb = "class Tag {\n" +
                "    commit: " + toIndentedString(commit) + "\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    message: " + toIndentedString(message) + "\n" +
                "    name: " + toIndentedString(name) + "\n" +
                "    tarballUrl: " + toIndentedString(tarballUrl) + "\n" +
                "    zipballUrl: " + toIndentedString(zipballUrl) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
