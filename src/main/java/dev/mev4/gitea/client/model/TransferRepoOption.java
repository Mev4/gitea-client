/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * TransferRepoOption options when transfer a repository&#x27;s ownership
 */
@Schema(description = "TransferRepoOption options when transfer a repository's ownership")
public class TransferRepoOption {
  @SerializedName("new_owner")
  private String newOwner;

  @SerializedName("team_ids")
  private List<Long> teamIds;

  public TransferRepoOption newOwner(String newOwner) {
    this.newOwner = newOwner;
    return this;
  }

  /**
   * Get newOwner
   *
   * @return newOwner
   **/
  @Schema(required = true, description = "")
  public String getNewOwner() {
    return newOwner;
  }

  public void setNewOwner(String newOwner) {
    this.newOwner = newOwner;
  }

  public TransferRepoOption teamIds(List<Long> teamIds) {
    this.teamIds = teamIds;
    return this;
  }

  public TransferRepoOption addTeamIdsItem(Long teamIdsItem) {
    if (this.teamIds == null) {
      this.teamIds = new ArrayList<Long>();
    }
    this.teamIds.add(teamIdsItem);
    return this;
  }

  /**
   * ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.
   *
   * @return teamIds
   **/
  @Schema(description = "ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.")
  public List<Long> getTeamIds() {
    return teamIds;
  }

  public void setTeamIds(List<Long> teamIds) {
    this.teamIds = teamIds;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransferRepoOption transferRepoOption = (TransferRepoOption) o;
    return Objects.equals(this.newOwner, transferRepoOption.newOwner) &&
           Objects.equals(this.teamIds, transferRepoOption.teamIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(newOwner, teamIds);
  }


  @Override
  public String toString() {

    String sb = "class TransferRepoOption {\n" +
                "    newOwner: " + toIndentedString(newOwner) + "\n" +
                "    teamIds: " + toIndentedString(teamIds) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
