/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * InlineResponse2001
 */

public class InlineResponse2001 {
  @SerializedName("data")
  private List<User> data;

  @SerializedName("ok")
  private Boolean ok;

  public InlineResponse2001 data(List<User> data) {
    this.data = data;
    return this;
  }

  public InlineResponse2001 addDataItem(User dataItem) {
    if (this.data == null) {
      this.data = new ArrayList<User>();
    }
    this.data.add(dataItem);
    return this;
  }

  /**
   * Get data
   *
   * @return data
   **/
  @Schema(description = "")
  public List<User> getData() {
    return data;
  }

  public void setData(List<User> data) {
    this.data = data;
  }

  public InlineResponse2001 ok(Boolean ok) {
    this.ok = ok;
    return this;
  }

  /**
   * Get ok
   *
   * @return ok
   **/
  @Schema(description = "")
  public Boolean isOk() {
    return ok;
  }

  public void setOk(Boolean ok) {
    this.ok = ok;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2001 inlineResponse2001 = (InlineResponse2001) o;
    return Objects.equals(this.data, inlineResponse2001.data) &&
           Objects.equals(this.ok, inlineResponse2001.ok);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, ok);
  }


  @Override
  public String toString() {

    String sb = "class InlineResponse2001 {\n" +
                "    data: " + toIndentedString(data) + "\n" +
                "    ok: " + toIndentedString(ok) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
