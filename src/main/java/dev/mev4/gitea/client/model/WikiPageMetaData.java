/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * WikiPageMetaData wiki page meta information
 */
@Schema(description = "WikiPageMetaData wiki page meta information")
public class WikiPageMetaData {
  @SerializedName("html_url")
  private String htmlUrl;

  @SerializedName("last_commit")
  private WikiCommit lastCommit;

  @SerializedName("sub_url")
  private String subUrl;

  @SerializedName("title")
  private String title;

  public WikiPageMetaData htmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
    return this;
  }

  /**
   * Get htmlUrl
   *
   * @return htmlUrl
   **/
  @Schema(description = "")
  public String getHtmlUrl() {
    return htmlUrl;
  }

  public void setHtmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
  }

  public WikiPageMetaData lastCommit(WikiCommit lastCommit) {
    this.lastCommit = lastCommit;
    return this;
  }

  /**
   * Get lastCommit
   *
   * @return lastCommit
   **/
  @Schema(description = "")
  public WikiCommit getLastCommit() {
    return lastCommit;
  }

  public void setLastCommit(WikiCommit lastCommit) {
    this.lastCommit = lastCommit;
  }

  public WikiPageMetaData subUrl(String subUrl) {
    this.subUrl = subUrl;
    return this;
  }

  /**
   * Get subUrl
   *
   * @return subUrl
   **/
  @Schema(description = "")
  public String getSubUrl() {
    return subUrl;
  }

  public void setSubUrl(String subUrl) {
    this.subUrl = subUrl;
  }

  public WikiPageMetaData title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   *
   * @return title
   **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WikiPageMetaData wikiPageMetaData = (WikiPageMetaData) o;
    return Objects.equals(this.htmlUrl, wikiPageMetaData.htmlUrl) &&
           Objects.equals(this.lastCommit, wikiPageMetaData.lastCommit) &&
           Objects.equals(this.subUrl, wikiPageMetaData.subUrl) &&
           Objects.equals(this.title, wikiPageMetaData.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(htmlUrl, lastCommit, subUrl, title);
  }


  @Override
  public String toString() {

    String sb = "class WikiPageMetaData {\n" +
                "    htmlUrl: " + toIndentedString(htmlUrl) + "\n" +
                "    lastCommit: " + toIndentedString(lastCommit) + "\n" +
                "    subUrl: " + toIndentedString(subUrl) + "\n" +
                "    title: " + toIndentedString(title) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
