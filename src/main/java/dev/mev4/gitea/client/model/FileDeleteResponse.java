/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * FileDeleteResponse contains information about a repo&#x27;s file that was deleted
 */
@Schema(description = "FileDeleteResponse contains information about a repo's file that was deleted")
public class FileDeleteResponse {
  @SerializedName("commit")
  private FileCommitResponse commit;

  @SerializedName("content")
  private Object content;

  @SerializedName("verification")
  private PayloadCommitVerification verification;

  public FileDeleteResponse commit(FileCommitResponse commit) {
    this.commit = commit;
    return this;
  }

  /**
   * Get commit
   *
   * @return commit
   **/
  @Schema(description = "")
  public FileCommitResponse getCommit() {
    return commit;
  }

  public void setCommit(FileCommitResponse commit) {
    this.commit = commit;
  }

  public FileDeleteResponse content(Object content) {
    this.content = content;
    return this;
  }

  /**
   * Get content
   *
   * @return content
   **/
  @Schema(description = "")
  public Object getContent() {
    return content;
  }

  public void setContent(Object content) {
    this.content = content;
  }

  public FileDeleteResponse verification(PayloadCommitVerification verification) {
    this.verification = verification;
    return this;
  }

  /**
   * Get verification
   *
   * @return verification
   **/
  @Schema(description = "")
  public PayloadCommitVerification getVerification() {
    return verification;
  }

  public void setVerification(PayloadCommitVerification verification) {
    this.verification = verification;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileDeleteResponse fileDeleteResponse = (FileDeleteResponse) o;
    return Objects.equals(this.commit, fileDeleteResponse.commit) &&
           Objects.equals(this.content, fileDeleteResponse.content) &&
           Objects.equals(this.verification, fileDeleteResponse.verification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commit, content, verification);
  }


  @Override
  public String toString() {

    String sb = "class FileDeleteResponse {\n" +
                "    commit: " + toIndentedString(commit) + "\n" +
                "    content: " + toIndentedString(content) + "\n" +
                "    verification: " + toIndentedString(verification) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
