/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * Secret represents a secret
 */
@Schema(description = "Secret represents a secret")
public class Secret {
  @SerializedName("created_at")
  private OffsetDateTime createdAt;

  @SerializedName("name")
  private String name;

  public Secret createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   *
   * @return createdAt
   **/
  @Schema(description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Secret name(String name) {
    this.name = name;
    return this;
  }

  /**
   * the secret&#x27;s name
   *
   * @return name
   **/
  @Schema(description = "the secret's name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Secret secret = (Secret) o;
    return Objects.equals(this.createdAt, secret.createdAt) &&
           Objects.equals(this.name, secret.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, name);
  }


  @Override
  public String toString() {

    String sb = "class Secret {\n" +
                "    createdAt: " + toIndentedString(createdAt) + "\n" +
                "    name: " + toIndentedString(name) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
