/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * CommitAffectedFiles store information about files affected by the commit
 */
@Schema(description = "CommitAffectedFiles store information about files affected by the commit")
public class CommitAffectedFiles {
  @SerializedName("filename")
  private String filename;

  @SerializedName("status")
  private String status;

  public CommitAffectedFiles filename(String filename) {
    this.filename = filename;
    return this;
  }

  /**
   * Get filename
   *
   * @return filename
   **/
  @Schema(description = "")
  public String getFilename() {
    return filename;
  }

  public void setFilename(String filename) {
    this.filename = filename;
  }

  public CommitAffectedFiles status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   *
   * @return status
   **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommitAffectedFiles commitAffectedFiles = (CommitAffectedFiles) o;
    return Objects.equals(this.filename, commitAffectedFiles.filename) &&
           Objects.equals(this.status, commitAffectedFiles.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filename, status);
  }


  @Override
  public String toString() {

    String sb = "class CommitAffectedFiles {\n" +
                "    filename: " + toIndentedString(filename) + "\n" +
                "    status: " + toIndentedString(status) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
