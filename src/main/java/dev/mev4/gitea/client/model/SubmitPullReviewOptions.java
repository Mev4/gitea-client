/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * SubmitPullReviewOptions are options to submit a pending pull review
 */
@Schema(description = "SubmitPullReviewOptions are options to submit a pending pull review")
public class SubmitPullReviewOptions {
  @SerializedName("body")
  private String body;

  @SerializedName("event")
  private String event;

  public SubmitPullReviewOptions body(String body) {
    this.body = body;
    return this;
  }

  /**
   * Get body
   *
   * @return body
   **/
  @Schema(description = "")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public SubmitPullReviewOptions event(String event) {
    this.event = event;
    return this;
  }

  /**
   * Get event
   *
   * @return event
   **/
  @Schema(description = "")
  public String getEvent() {
    return event;
  }

  public void setEvent(String event) {
    this.event = event;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubmitPullReviewOptions submitPullReviewOptions = (SubmitPullReviewOptions) o;
    return Objects.equals(this.body, submitPullReviewOptions.body) &&
           Objects.equals(this.event, submitPullReviewOptions.event);
  }

  @Override
  public int hashCode() {
    return Objects.hash(body, event);
  }


  @Override
  public String toString() {

    String sb = "class SubmitPullReviewOptions {\n" +
                "    body: " + toIndentedString(body) + "\n" +
                "    event: " + toIndentedString(event) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
