/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * CreateBranchRepoOption options when creating a branch in a repository
 */
@Schema(description = "CreateBranchRepoOption options when creating a branch in a repository")
public class CreateBranchRepoOption {
  @SerializedName("new_branch_name")
  private String newBranchName;

  @SerializedName("old_branch_name")
  private String oldBranchName;

  @SerializedName("old_ref_name")
  private String oldRefName;

  public CreateBranchRepoOption newBranchName(String newBranchName) {
    this.newBranchName = newBranchName;
    return this;
  }

  /**
   * Name of the branch to create
   *
   * @return newBranchName
   **/
  @Schema(required = true, description = "Name of the branch to create")
  public String getNewBranchName() {
    return newBranchName;
  }

  public void setNewBranchName(String newBranchName) {
    this.newBranchName = newBranchName;
  }

  public CreateBranchRepoOption oldBranchName(String oldBranchName) {
    this.oldBranchName = oldBranchName;
    return this;
  }

  /**
   * Deprecated: true Name of the old branch to create from
   *
   * @return oldBranchName
   **/
  @Schema(description = "Deprecated: true Name of the old branch to create from")
  public String getOldBranchName() {
    return oldBranchName;
  }

  public void setOldBranchName(String oldBranchName) {
    this.oldBranchName = oldBranchName;
  }

  public CreateBranchRepoOption oldRefName(String oldRefName) {
    this.oldRefName = oldRefName;
    return this;
  }

  /**
   * Name of the old branch/tag/commit to create from
   *
   * @return oldRefName
   **/
  @Schema(description = "Name of the old branch/tag/commit to create from")
  public String getOldRefName() {
    return oldRefName;
  }

  public void setOldRefName(String oldRefName) {
    this.oldRefName = oldRefName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateBranchRepoOption createBranchRepoOption = (CreateBranchRepoOption) o;
    return Objects.equals(this.newBranchName, createBranchRepoOption.newBranchName) &&
           Objects.equals(this.oldBranchName, createBranchRepoOption.oldBranchName) &&
           Objects.equals(this.oldRefName, createBranchRepoOption.oldRefName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(newBranchName, oldBranchName, oldRefName);
  }


  @Override
  public String toString() {

    String sb = "class CreateBranchRepoOption {\n" +
                "    newBranchName: " + toIndentedString(newBranchName) + "\n" +
                "    oldBranchName: " + toIndentedString(oldBranchName) + "\n" +
                "    oldRefName: " + toIndentedString(oldRefName) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
