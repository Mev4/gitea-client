/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * FileCommitResponse
 */

public class FileCommitResponse {
  @SerializedName("author")
  private CommitUser author;

  @SerializedName("committer")
  private CommitUser committer;

  @SerializedName("created")
  private OffsetDateTime created;

  @SerializedName("html_url")
  private String htmlUrl;

  @SerializedName("message")
  private String message;

  @SerializedName("parents")
  private List<CommitMeta> parents;

  @SerializedName("sha")
  private String sha;

  @SerializedName("tree")
  private CommitMeta tree;

  @SerializedName("url")
  private String url;

  public FileCommitResponse author(CommitUser author) {
    this.author = author;
    return this;
  }

  /**
   * Get author
   *
   * @return author
   **/
  @Schema(description = "")
  public CommitUser getAuthor() {
    return author;
  }

  public void setAuthor(CommitUser author) {
    this.author = author;
  }

  public FileCommitResponse committer(CommitUser committer) {
    this.committer = committer;
    return this;
  }

  /**
   * Get committer
   *
   * @return committer
   **/
  @Schema(description = "")
  public CommitUser getCommitter() {
    return committer;
  }

  public void setCommitter(CommitUser committer) {
    this.committer = committer;
  }

  public FileCommitResponse created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

  /**
   * Get created
   *
   * @return created
   **/
  @Schema(description = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public FileCommitResponse htmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
    return this;
  }

  /**
   * Get htmlUrl
   *
   * @return htmlUrl
   **/
  @Schema(description = "")
  public String getHtmlUrl() {
    return htmlUrl;
  }

  public void setHtmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
  }

  public FileCommitResponse message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   *
   * @return message
   **/
  @Schema(description = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public FileCommitResponse parents(List<CommitMeta> parents) {
    this.parents = parents;
    return this;
  }

  public FileCommitResponse addParentsItem(CommitMeta parentsItem) {
    if (this.parents == null) {
      this.parents = new ArrayList<CommitMeta>();
    }
    this.parents.add(parentsItem);
    return this;
  }

  /**
   * Get parents
   *
   * @return parents
   **/
  @Schema(description = "")
  public List<CommitMeta> getParents() {
    return parents;
  }

  public void setParents(List<CommitMeta> parents) {
    this.parents = parents;
  }

  public FileCommitResponse sha(String sha) {
    this.sha = sha;
    return this;
  }

  /**
   * Get sha
   *
   * @return sha
   **/
  @Schema(description = "")
  public String getSha() {
    return sha;
  }

  public void setSha(String sha) {
    this.sha = sha;
  }

  public FileCommitResponse tree(CommitMeta tree) {
    this.tree = tree;
    return this;
  }

  /**
   * Get tree
   *
   * @return tree
   **/
  @Schema(description = "")
  public CommitMeta getTree() {
    return tree;
  }

  public void setTree(CommitMeta tree) {
    this.tree = tree;
  }

  public FileCommitResponse url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   *
   * @return url
   **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileCommitResponse fileCommitResponse = (FileCommitResponse) o;
    return Objects.equals(this.author, fileCommitResponse.author) &&
           Objects.equals(this.committer, fileCommitResponse.committer) &&
           Objects.equals(this.created, fileCommitResponse.created) &&
           Objects.equals(this.htmlUrl, fileCommitResponse.htmlUrl) &&
           Objects.equals(this.message, fileCommitResponse.message) &&
           Objects.equals(this.parents, fileCommitResponse.parents) &&
           Objects.equals(this.sha, fileCommitResponse.sha) &&
           Objects.equals(this.tree, fileCommitResponse.tree) &&
           Objects.equals(this.url, fileCommitResponse.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(author, committer, created, htmlUrl, message, parents, sha, tree, url);
  }


  @Override
  public String toString() {

    String sb = "class FileCommitResponse {\n" +
                "    author: " + toIndentedString(author) + "\n" +
                "    committer: " + toIndentedString(committer) + "\n" +
                "    created: " + toIndentedString(created) + "\n" +
                "    htmlUrl: " + toIndentedString(htmlUrl) + "\n" +
                "    message: " + toIndentedString(message) + "\n" +
                "    parents: " + toIndentedString(parents) + "\n" +
                "    sha: " + toIndentedString(sha) + "\n" +
                "    tree: " + toIndentedString(tree) + "\n" +
                "    url: " + toIndentedString(url) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
