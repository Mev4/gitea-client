/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * PullReview represents a pull request review
 */
@Schema(description = "PullReview represents a pull request review")
public class PullReview {
  @SerializedName("body")
  private String body;

  @SerializedName("comments_count")
  private Long commentsCount;

  @SerializedName("commit_id")
  private String commitId;

  @SerializedName("dismissed")
  private Boolean dismissed;

  @SerializedName("html_url")
  private String htmlUrl;

  @SerializedName("id")
  private Long id;

  @SerializedName("official")
  private Boolean official;

  @SerializedName("pull_request_url")
  private String pullRequestUrl;

  @SerializedName("stale")
  private Boolean stale;

  @SerializedName("state")
  private String state;

  @SerializedName("submitted_at")
  private OffsetDateTime submittedAt;

  @SerializedName("team")
  private Team team;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt;

  @SerializedName("user")
  private User user;

  public PullReview body(String body) {
    this.body = body;
    return this;
  }

  /**
   * Get body
   *
   * @return body
   **/
  @Schema(description = "")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public PullReview commentsCount(Long commentsCount) {
    this.commentsCount = commentsCount;
    return this;
  }

  /**
   * Get commentsCount
   *
   * @return commentsCount
   **/
  @Schema(description = "")
  public Long getCommentsCount() {
    return commentsCount;
  }

  public void setCommentsCount(Long commentsCount) {
    this.commentsCount = commentsCount;
  }

  public PullReview commitId(String commitId) {
    this.commitId = commitId;
    return this;
  }

  /**
   * Get commitId
   *
   * @return commitId
   **/
  @Schema(description = "")
  public String getCommitId() {
    return commitId;
  }

  public void setCommitId(String commitId) {
    this.commitId = commitId;
  }

  public PullReview dismissed(Boolean dismissed) {
    this.dismissed = dismissed;
    return this;
  }

  /**
   * Get dismissed
   *
   * @return dismissed
   **/
  @Schema(description = "")
  public Boolean isDismissed() {
    return dismissed;
  }

  public void setDismissed(Boolean dismissed) {
    this.dismissed = dismissed;
  }

  public PullReview htmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
    return this;
  }

  /**
   * Get htmlUrl
   *
   * @return htmlUrl
   **/
  @Schema(description = "")
  public String getHtmlUrl() {
    return htmlUrl;
  }

  public void setHtmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
  }

  public PullReview id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id
   **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public PullReview official(Boolean official) {
    this.official = official;
    return this;
  }

  /**
   * Get official
   *
   * @return official
   **/
  @Schema(description = "")
  public Boolean isOfficial() {
    return official;
  }

  public void setOfficial(Boolean official) {
    this.official = official;
  }

  public PullReview pullRequestUrl(String pullRequestUrl) {
    this.pullRequestUrl = pullRequestUrl;
    return this;
  }

  /**
   * Get pullRequestUrl
   *
   * @return pullRequestUrl
   **/
  @Schema(description = "")
  public String getPullRequestUrl() {
    return pullRequestUrl;
  }

  public void setPullRequestUrl(String pullRequestUrl) {
    this.pullRequestUrl = pullRequestUrl;
  }

  public PullReview stale(Boolean stale) {
    this.stale = stale;
    return this;
  }

  /**
   * Get stale
   *
   * @return stale
   **/
  @Schema(description = "")
  public Boolean isStale() {
    return stale;
  }

  public void setStale(Boolean stale) {
    this.stale = stale;
  }

  public PullReview state(String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   *
   * @return state
   **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public PullReview submittedAt(OffsetDateTime submittedAt) {
    this.submittedAt = submittedAt;
    return this;
  }

  /**
   * Get submittedAt
   *
   * @return submittedAt
   **/
  @Schema(description = "")
  public OffsetDateTime getSubmittedAt() {
    return submittedAt;
  }

  public void setSubmittedAt(OffsetDateTime submittedAt) {
    this.submittedAt = submittedAt;
  }

  public PullReview team(Team team) {
    this.team = team;
    return this;
  }

  /**
   * Get team
   *
   * @return team
   **/
  @Schema(description = "")
  public Team getTeam() {
    return team;
  }

  public void setTeam(Team team) {
    this.team = team;
  }

  public PullReview updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   *
   * @return updatedAt
   **/
  @Schema(description = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public PullReview user(User user) {
    this.user = user;
    return this;
  }

  /**
   * Get user
   *
   * @return user
   **/
  @Schema(description = "")
  public User getUser() {
    return user;
  }

  public void setUser(User user) {
    this.user = user;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PullReview pullReview = (PullReview) o;
    return Objects.equals(this.body, pullReview.body) &&
           Objects.equals(this.commentsCount, pullReview.commentsCount) &&
           Objects.equals(this.commitId, pullReview.commitId) &&
           Objects.equals(this.dismissed, pullReview.dismissed) &&
           Objects.equals(this.htmlUrl, pullReview.htmlUrl) &&
           Objects.equals(this.id, pullReview.id) &&
           Objects.equals(this.official, pullReview.official) &&
           Objects.equals(this.pullRequestUrl, pullReview.pullRequestUrl) &&
           Objects.equals(this.stale, pullReview.stale) &&
           Objects.equals(this.state, pullReview.state) &&
           Objects.equals(this.submittedAt, pullReview.submittedAt) &&
           Objects.equals(this.team, pullReview.team) &&
           Objects.equals(this.updatedAt, pullReview.updatedAt) &&
           Objects.equals(this.user, pullReview.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(body, commentsCount, commitId, dismissed, htmlUrl, id, official, pullRequestUrl, stale, state, submittedAt, team, updatedAt, user);
  }


  @Override
  public String toString() {

    String sb = "class PullReview {\n" +
                "    body: " + toIndentedString(body) + "\n" +
                "    commentsCount: " + toIndentedString(commentsCount) + "\n" +
                "    commitId: " + toIndentedString(commitId) + "\n" +
                "    dismissed: " + toIndentedString(dismissed) + "\n" +
                "    htmlUrl: " + toIndentedString(htmlUrl) + "\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    official: " + toIndentedString(official) + "\n" +
                "    pullRequestUrl: " + toIndentedString(pullRequestUrl) + "\n" +
                "    stale: " + toIndentedString(stale) + "\n" +
                "    state: " + toIndentedString(state) + "\n" +
                "    submittedAt: " + toIndentedString(submittedAt) + "\n" +
                "    team: " + toIndentedString(team) + "\n" +
                "    updatedAt: " + toIndentedString(updatedAt) + "\n" +
                "    user: " + toIndentedString(user) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
