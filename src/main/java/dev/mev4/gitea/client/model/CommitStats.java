/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * CommitStats is statistics for a RepoCommit
 */
@Schema(description = "CommitStats is statistics for a RepoCommit")
public class CommitStats {
  @SerializedName("additions")
  private Long additions;

  @SerializedName("deletions")
  private Long deletions;

  @SerializedName("total")
  private Long total;

  public CommitStats additions(Long additions) {
    this.additions = additions;
    return this;
  }

  /**
   * Get additions
   *
   * @return additions
   **/
  @Schema(description = "")
  public Long getAdditions() {
    return additions;
  }

  public void setAdditions(Long additions) {
    this.additions = additions;
  }

  public CommitStats deletions(Long deletions) {
    this.deletions = deletions;
    return this;
  }

  /**
   * Get deletions
   *
   * @return deletions
   **/
  @Schema(description = "")
  public Long getDeletions() {
    return deletions;
  }

  public void setDeletions(Long deletions) {
    this.deletions = deletions;
  }

  public CommitStats total(Long total) {
    this.total = total;
    return this;
  }

  /**
   * Get total
   *
   * @return total
   **/
  @Schema(description = "")
  public Long getTotal() {
    return total;
  }

  public void setTotal(Long total) {
    this.total = total;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommitStats commitStats = (CommitStats) o;
    return Objects.equals(this.additions, commitStats.additions) &&
           Objects.equals(this.deletions, commitStats.deletions) &&
           Objects.equals(this.total, commitStats.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additions, deletions, total);
  }


  @Override
  public String toString() {

    String sb = "class CommitStats {\n" +
                "    additions: " + toIndentedString(additions) + "\n" +
                "    deletions: " + toIndentedString(deletions) + "\n" +
                "    total: " + toIndentedString(total) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
