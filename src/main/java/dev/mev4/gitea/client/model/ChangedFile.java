/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * ChangedFile store information about files affected by the pull request
 */
@Schema(description = "ChangedFile store information about files affected by the pull request")
public class ChangedFile {
  @SerializedName("additions")
  private Long additions;

  @SerializedName("changes")
  private Long changes;

  @SerializedName("contents_url")
  private String contentsUrl;

  @SerializedName("deletions")
  private Long deletions;

  @SerializedName("filename")
  private String filename;

  @SerializedName("html_url")
  private String htmlUrl;

  @SerializedName("previous_filename")
  private String previousFilename;

  @SerializedName("raw_url")
  private String rawUrl;

  @SerializedName("status")
  private String status;

  public ChangedFile additions(Long additions) {
    this.additions = additions;
    return this;
  }

  /**
   * Get additions
   *
   * @return additions
   **/
  @Schema(description = "")
  public Long getAdditions() {
    return additions;
  }

  public void setAdditions(Long additions) {
    this.additions = additions;
  }

  public ChangedFile changes(Long changes) {
    this.changes = changes;
    return this;
  }

  /**
   * Get changes
   *
   * @return changes
   **/
  @Schema(description = "")
  public Long getChanges() {
    return changes;
  }

  public void setChanges(Long changes) {
    this.changes = changes;
  }

  public ChangedFile contentsUrl(String contentsUrl) {
    this.contentsUrl = contentsUrl;
    return this;
  }

  /**
   * Get contentsUrl
   *
   * @return contentsUrl
   **/
  @Schema(description = "")
  public String getContentsUrl() {
    return contentsUrl;
  }

  public void setContentsUrl(String contentsUrl) {
    this.contentsUrl = contentsUrl;
  }

  public ChangedFile deletions(Long deletions) {
    this.deletions = deletions;
    return this;
  }

  /**
   * Get deletions
   *
   * @return deletions
   **/
  @Schema(description = "")
  public Long getDeletions() {
    return deletions;
  }

  public void setDeletions(Long deletions) {
    this.deletions = deletions;
  }

  public ChangedFile filename(String filename) {
    this.filename = filename;
    return this;
  }

  /**
   * Get filename
   *
   * @return filename
   **/
  @Schema(description = "")
  public String getFilename() {
    return filename;
  }

  public void setFilename(String filename) {
    this.filename = filename;
  }

  public ChangedFile htmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
    return this;
  }

  /**
   * Get htmlUrl
   *
   * @return htmlUrl
   **/
  @Schema(description = "")
  public String getHtmlUrl() {
    return htmlUrl;
  }

  public void setHtmlUrl(String htmlUrl) {
    this.htmlUrl = htmlUrl;
  }

  public ChangedFile previousFilename(String previousFilename) {
    this.previousFilename = previousFilename;
    return this;
  }

  /**
   * Get previousFilename
   *
   * @return previousFilename
   **/
  @Schema(description = "")
  public String getPreviousFilename() {
    return previousFilename;
  }

  public void setPreviousFilename(String previousFilename) {
    this.previousFilename = previousFilename;
  }

  public ChangedFile rawUrl(String rawUrl) {
    this.rawUrl = rawUrl;
    return this;
  }

  /**
   * Get rawUrl
   *
   * @return rawUrl
   **/
  @Schema(description = "")
  public String getRawUrl() {
    return rawUrl;
  }

  public void setRawUrl(String rawUrl) {
    this.rawUrl = rawUrl;
  }

  public ChangedFile status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   *
   * @return status
   **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangedFile changedFile = (ChangedFile) o;
    return Objects.equals(this.additions, changedFile.additions) &&
           Objects.equals(this.changes, changedFile.changes) &&
           Objects.equals(this.contentsUrl, changedFile.contentsUrl) &&
           Objects.equals(this.deletions, changedFile.deletions) &&
           Objects.equals(this.filename, changedFile.filename) &&
           Objects.equals(this.htmlUrl, changedFile.htmlUrl) &&
           Objects.equals(this.previousFilename, changedFile.previousFilename) &&
           Objects.equals(this.rawUrl, changedFile.rawUrl) &&
           Objects.equals(this.status, changedFile.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additions, changes, contentsUrl, deletions, filename, htmlUrl, previousFilename, rawUrl, status);
  }


  @Override
  public String toString() {

    String sb = "class ChangedFile {\n" +
                "    additions: " + toIndentedString(additions) + "\n" +
                "    changes: " + toIndentedString(changes) + "\n" +
                "    contentsUrl: " + toIndentedString(contentsUrl) + "\n" +
                "    deletions: " + toIndentedString(deletions) + "\n" +
                "    filename: " + toIndentedString(filename) + "\n" +
                "    htmlUrl: " + toIndentedString(htmlUrl) + "\n" +
                "    previousFilename: " + toIndentedString(previousFilename) + "\n" +
                "    rawUrl: " + toIndentedString(rawUrl) + "\n" +
                "    status: " + toIndentedString(status) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
