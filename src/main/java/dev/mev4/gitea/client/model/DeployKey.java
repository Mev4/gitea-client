/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * DeployKey a deploy key
 */
@Schema(description = "DeployKey a deploy key")
public class DeployKey {
  @SerializedName("created_at")
  private OffsetDateTime createdAt;

  @SerializedName("fingerprint")
  private String fingerprint;

  @SerializedName("id")
  private Long id;

  @SerializedName("key")
  private String key;

  @SerializedName("key_id")
  private Long keyId;

  @SerializedName("read_only")
  private Boolean readOnly;

  @SerializedName("repository")
  private Repository repository;

  @SerializedName("title")
  private String title;

  @SerializedName("url")
  private String url;

  public DeployKey createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   *
   * @return createdAt
   **/
  @Schema(description = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public DeployKey fingerprint(String fingerprint) {
    this.fingerprint = fingerprint;
    return this;
  }

  /**
   * Get fingerprint
   *
   * @return fingerprint
   **/
  @Schema(description = "")
  public String getFingerprint() {
    return fingerprint;
  }

  public void setFingerprint(String fingerprint) {
    this.fingerprint = fingerprint;
  }

  public DeployKey id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id
   **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DeployKey key(String key) {
    this.key = key;
    return this;
  }

  /**
   * Get key
   *
   * @return key
   **/
  @Schema(description = "")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public DeployKey keyId(Long keyId) {
    this.keyId = keyId;
    return this;
  }

  /**
   * Get keyId
   *
   * @return keyId
   **/
  @Schema(description = "")
  public Long getKeyId() {
    return keyId;
  }

  public void setKeyId(Long keyId) {
    this.keyId = keyId;
  }

  public DeployKey readOnly(Boolean readOnly) {
    this.readOnly = readOnly;
    return this;
  }

  /**
   * Get readOnly
   *
   * @return readOnly
   **/
  @Schema(description = "")
  public Boolean isReadOnly() {
    return readOnly;
  }

  public void setReadOnly(Boolean readOnly) {
    this.readOnly = readOnly;
  }

  public DeployKey repository(Repository repository) {
    this.repository = repository;
    return this;
  }

  /**
   * Get repository
   *
   * @return repository
   **/
  @Schema(description = "")
  public Repository getRepository() {
    return repository;
  }

  public void setRepository(Repository repository) {
    this.repository = repository;
  }

  public DeployKey title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   *
   * @return title
   **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public DeployKey url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   *
   * @return url
   **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeployKey deployKey = (DeployKey) o;
    return Objects.equals(this.createdAt, deployKey.createdAt) &&
           Objects.equals(this.fingerprint, deployKey.fingerprint) &&
           Objects.equals(this.id, deployKey.id) &&
           Objects.equals(this.key, deployKey.key) &&
           Objects.equals(this.keyId, deployKey.keyId) &&
           Objects.equals(this.readOnly, deployKey.readOnly) &&
           Objects.equals(this.repository, deployKey.repository) &&
           Objects.equals(this.title, deployKey.title) &&
           Objects.equals(this.url, deployKey.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, fingerprint, id, key, keyId, readOnly, repository, title, url);
  }


  @Override
  public String toString() {

    String sb = "class DeployKey {\n" +
                "    createdAt: " + toIndentedString(createdAt) + "\n" +
                "    fingerprint: " + toIndentedString(fingerprint) + "\n" +
                "    id: " + toIndentedString(id) + "\n" +
                "    key: " + toIndentedString(key) + "\n" +
                "    keyId: " + toIndentedString(keyId) + "\n" +
                "    readOnly: " + toIndentedString(readOnly) + "\n" +
                "    repository: " + toIndentedString(repository) + "\n" +
                "    title: " + toIndentedString(title) + "\n" +
                "    url: " + toIndentedString(url) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
