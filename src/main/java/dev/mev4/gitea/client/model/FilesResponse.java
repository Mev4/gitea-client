/*
 * Gitea API
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.23.0+dev-728-g93640993e3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package dev.mev4.gitea.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * FilesResponse contains information about multiple files from a repo
 */
@Schema(description = "FilesResponse contains information about multiple files from a repo")
public class FilesResponse {
  @SerializedName("commit")
  private FileCommitResponse commit;

  @SerializedName("files")
  private List<ContentsResponse> files;

  @SerializedName("verification")
  private PayloadCommitVerification verification;

  public FilesResponse commit(FileCommitResponse commit) {
    this.commit = commit;
    return this;
  }

  /**
   * Get commit
   *
   * @return commit
   **/
  @Schema(description = "")
  public FileCommitResponse getCommit() {
    return commit;
  }

  public void setCommit(FileCommitResponse commit) {
    this.commit = commit;
  }

  public FilesResponse files(List<ContentsResponse> files) {
    this.files = files;
    return this;
  }

  public FilesResponse addFilesItem(ContentsResponse filesItem) {
    if (this.files == null) {
      this.files = new ArrayList<ContentsResponse>();
    }
    this.files.add(filesItem);
    return this;
  }

  /**
   * Get files
   *
   * @return files
   **/
  @Schema(description = "")
  public List<ContentsResponse> getFiles() {
    return files;
  }

  public void setFiles(List<ContentsResponse> files) {
    this.files = files;
  }

  public FilesResponse verification(PayloadCommitVerification verification) {
    this.verification = verification;
    return this;
  }

  /**
   * Get verification
   *
   * @return verification
   **/
  @Schema(description = "")
  public PayloadCommitVerification getVerification() {
    return verification;
  }

  public void setVerification(PayloadCommitVerification verification) {
    this.verification = verification;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilesResponse filesResponse = (FilesResponse) o;
    return Objects.equals(this.commit, filesResponse.commit) &&
           Objects.equals(this.files, filesResponse.files) &&
           Objects.equals(this.verification, filesResponse.verification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commit, files, verification);
  }


  @Override
  public String toString() {

    String sb = "class FilesResponse {\n" +
                "    commit: " + toIndentedString(commit) + "\n" +
                "    files: " + toIndentedString(files) + "\n" +
                "    verification: " + toIndentedString(verification) + "\n" +
                "}";
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
